[
  {
    "input": "Give me a list of containers that have the Ubuntu image as their ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Fetch the containers that have exited with a status code of 1.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Provide a comprehensive list of nginx images, including their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Give me a list of all containers, indicating their status as well. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "List all containers with Ubuntu as their ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "\"Dear Docker, in order to proceed, you must log in to the new registry on newregistry.example.org. Use your username, Mary Doe, to log in.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login newregistry.example.org --username=marydoe\""
  },
  {
    "input": "Docker, please show me the containers with exited status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Please stop all containers that are currently operational.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q --filter status=running)\""
  },
  {
    "input": "I want to see the running containers with the ACME label from the vendor ACME.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Please show me a table of images, including the repository, tag, ID, and size.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "I want to see a list of all Docker images, including the dangling ones. Could you please provide their repository, tags, and IDs as well?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Docker, display the running containers rooted from Debian.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "Politely stop my_container by sending the SIGINT signal, Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGINT my_container\""
  },
  {
    "input": "Present all the images without any truncation of their details.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "Retrieve the tasks that are running in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Please show me the containers with the name \"my-container\", please. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "I want to know the status of all containers, whether running or stopped. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Attach the container \"my_container\" to the \"my_network\" network.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe --password-stdin \u003c ~/herpassword.txt\""
  },
  {
    "input": "Give me the Docker images that were built before the image \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "I need you to list the repositories and tags of your images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Provide me with the repository, tag, and digest information of the images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "You should login to the new registry with your username and password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login newregistry.example.org --username=marydoe --password=herpassword\""
  },
  {
    "input": "Kindly provide your username and password from the specified file to login.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Please display the containers with a healthy health status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Give me a list of all containers that exited before the container with ID 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Get the names, images, and status of the containers for me.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Let me know the current status and sizes of the running containers.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Please show me the Docker containers that have exited and are related to the nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=nginx'"
  },
  {
    "input": "List all the containers that are currently running on the network my-network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Give me a list of images along with their repository, tag and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "I need the complete details of all the currently running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Please show me the tasks currently running in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Show me all the running containers that expose port 80.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "Show me the list of images with dangling status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f dangling=true"
  },
  {
    "input": "I want to know the last 4 containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "Display the running containers having an unhealthy health status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'"
  },
  {
    "input": "Find the containers that have the ancestor as mongo and volumes set to /app.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "Get me the Docker image IDs. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Tell me the status and sizes of the containers that are currently running.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Retrieve the nginx images' repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please login to the new registry using your username and password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login newregistry.example.org --username=marydoe --password=herpassword\""
  },
  {
    "input": "List the running containers that have the ACME label from vendor ACME.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Give me a list of all the images in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Docker, I want to see all the running containers, but only those with the 'network=host' filter.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Don't keep me hanging, show me the details of the recently executed container immediately.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Retrieve the running containers that are marked as unhealthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'"
  },
  {
    "input": "Please display the running containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "Retrieve the repository, tag, and digest information for the images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Get me the containers that are currently running and have the Ubuntu image. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Show me the images that are not being used by any containers.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Docker, please terminate all the containers linked to my image.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q --filter ancestor=my_image)\""
  },
  {
    "input": "List all running containers with an unhealthy health status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'"
  },
  {
    "input": "Display the containers that are named \"my-container\", please. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "Please show the running containers that have been created before 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "Provide me the list of containers with port 80 exposed. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'expose=80'"
  },
  {
    "input": "Fetch the details of the three latest containers, including the inactive ones.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "Can you display the repositories and tags of your images, please?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Give me a list of containers that are currently healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Provide me with the complete details of running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Fetch me the full details of all active containers without any truncation.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Could you display all the images along with their repository, tag, and ID?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "List all containers with the name \"my-container\". ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "List all the containers with exited status, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Show running containers filtered with the Ubuntu ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Display all the containers that have exited prior to container 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Make sure to login to the new registry using your username and password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login newregistry.example.org --username=marydoe --password=herpassword\""
  },
  {
    "input": "Show me the repository, tag, and ID of the nginx images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "I want to see the list of all containers, including the inactive ones. Show me the information about the first three.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "Dear Docker, please log in to yetanotherregistry.example.net with the credentials of user \"marydoe\" and her password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login yetanotherregistry.example.net --username=marydoe --password=herpassword\""
  },
  {
    "input": "Fetch me the containers that are running and are on the network my-network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Please gracefully terminate confusioner by killing it with a SIGHUP signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGHUP confusioner\""
  },
  {
    "input": "Fetch all the containers that have the status running on my-network network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Display all running containers that are part of the frontend network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Show me the information of the last executed container ASAP.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Hey there, please stop all the running containers gracefully within 5 seconds.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 5 $(docker ps -q --filter status=running)\""
  },
  {
    "input": "List all containers with the volume set as \"/data\" and the ancestor set as \"postgres\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "Please halt my_container gracefully after 10 seconds.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 10 my_container\""
  },
  {
    "input": "Retrieve the running Docker containers created since 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Hand over the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "I need to view the details of the last 4 containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "Get rid of all the dangling images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f dangling=true"
  },
  {
    "input": "Can you show me the details of the running containers?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "Give me the containers that are running on the network my-network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Give me a list of all the Docker images and their digests. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Give me the containers that have exited and are based on the Alpine image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Get the digests of all the available Docker images. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Display all the containers running the Ubuntu image. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "\"Docker, I need you to log in using the username johndoe.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe\""
  },
  {
    "input": "Log in now, Docker! Use your username and password for the authentication process.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password=mypassword\""
  },
  {
    "input": "Display the sizes of all the containers.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Give me the details of any containers created since 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "Please show me the running containers with port 443 exposed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=443'"
  },
  {
    "input": "Display the details of the three latest containers, including the inactive ones.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "Show me the list of all containers along with their status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Hey Docker, can you list all the containers with exited status, please?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Please provide me with the information of the three most recent containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "You can access anotherregistry.example.com by logging in with your username as \"johndoe\" and password as \"mypassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "What images are there since the nginx:alpine image?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f since=nginx:alpine"
  },
  {
    "input": "Please provide me with the unique identifiers of all containers, regardless of their current state. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Give me a list of the containers that exited prior to the container 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Please log in to the container registry with your username and password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Display the IDs of all containers, regardless of their status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "List the containers that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Hey Docker, list all the containers that are in exited status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Make sure to include all the information of the images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "Fetch the containers that have exited successfully with a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Can you provide me with a list of the repositories and tags used for your images?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Display the containers, including their names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "List the repositories and tags of your images, if it's not too much trouble.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Retrieve the digests for all the available images in Docker. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Docker, I'm interested in the running containers. Can you apply the 'network=host' filter, please?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Show the images that were built before \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "Retrieve a list of all the images showcasing their corresponding repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me the complete information of all the currently running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Please authenticate yourself as Johndoe to login to Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe\""
  },
  {
    "input": "Johndoe, please use your username to login to Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe\""
  },
  {
    "input": "Fetch the images along with their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "I need a list of all the Docker images with their corresponding digests. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Fetch the running containers with an unhealthy health status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'"
  },
  {
    "input": "Docker, show me the containers that are in exited status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Provide me with a list of Docker images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Show me the running containers that are considered healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "List all running containers that have a healthy status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "Provide a list of containers started since 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "List all images that have the label \"maintainer=nginx\" and include their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Docker, I request you to cease all the active containers smoothly within 5 seconds.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 5 $(docker ps -q --filter status=running)\""
  },
  {
    "input": "Please provide me with the names and images of all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'"
  },
  {
    "input": "I want the list of all the containers that have exited before container with ID 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Fetch me all the available Docker images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Bring me the images along with their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show running containers that have the Ubuntu image as their ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "I need to see the running containers that have port 8080 exposed. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'publish=8080'"
  },
  {
    "input": "Fetch the names and statuses of all running containers for me.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Give me a list of running containers with the Ubuntu ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "I need to see the running containers with port 80 exposed. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'expose=80'"
  },
  {
    "input": "Retrieve the containers that are running and have the network set to my-network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Kindly stop my_container1 and my_container2, ensuring a graceful termination with the SIGINT signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGINT my_container1 my_container2\""
  },
  {
    "input": "Please provide me with the list of running containers' IDs and images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Display the containers in the frontend network that have a running status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "I request you to login using your account details mentioned in the password file.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Retrieve a list of all containers and their names, images, and current status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "I need the full information of active containers in one go.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Could you show me all the images along with their respective repository, tag, and ID?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Cease the operation of all running containers immediately.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=running)\""
  },
  {
    "input": "Give me a list of containers running prior to 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "Please list down the containers that are running with an unhealthy health status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'"
  },
  {
    "input": "Only show me the containers that have a health status of healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Retrieve the names and statuses of all running containers, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Give me a list of all Docker images, including those that are not being used at the moment.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --all"
  },
  {
    "input": "Please display the containers with a health status of healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "List all containers along with their names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "I need the repository, tag, and ID of all the images created before the latest nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please, Docker, can you show me the running containers and filter them with 'network=host'?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "I want to see all containers with their names, images, and current status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Show me all the available Docker images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "List all the running Docker containers filtered by creation that started from 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Get me the repository, tag, and ID of all the images that were created before the latest nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me the IDs of the Docker images. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Get me the list of containers that are currently running and have volumes attached to \"/data\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "List the containers along with their respective status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Display only the IDs of the containers that are running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "List the running containers along with their sizes.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Retrieve the images and unveil their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Give me the repository, tag, and digest for the images on the server.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Give me a list of containers with port 9090 published and in a running state.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'"
  },
  {
    "input": "I want to see all containers and their names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Can you give me the details of containers running on the Debian image?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "List down all the currently active containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Please show me the status and sizes of all the containers.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Display the list of nginx images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "Display the Docker images created earlier than \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "Provide me with the running containers on my-network network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "List all containers and their status, regardless of their state. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Show me the containers which have the ancestor set as mongo and volume set to /app.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "Please provide the list of containers that are currently running and have port 443 exposed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=443'"
  },
  {
    "input": "Provide me with a table that shows the repository, tag, ID, and size of the images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "Filter and show me only the containers that are marked as healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Show me all the containers in exited status, Docker, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Make sure to stop any containers utilizing my image.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q --filter ancestor=my_image)\""
  },
  {
    "input": "I want to see the running containers created after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Please display the stopped containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Display all the active containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Please display the running containers for me. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "Fetch me the information about nginx images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "Please authenticate me using your login credentials.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Docker, kindly log me in as \"marydoe\" to proceed further.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe\""
  },
  {
    "input": "Show me the containers that have exited and are using Alpine as the base image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Fetch all images with the label \"maintainer=nginx\" along with their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please list the IDs of the currently running containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Fetch the containers that have the status running and network set to my-network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Present me with the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Make sure to login to the Docker container registry using your username and password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Retrieve the images and present them in a table showing the repository, tag, ID, and size.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "Docker, terminate the container called \"my_container\" gracefully with the SIGTERM signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM my_container\""
  },
  {
    "input": "Show me the containers that are currently running and were created after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Please log in to anotherregistry.example.com using your username \"johndoe\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe\""
  },
  {
    "input": "Docker, could you please display the running containers, but only the ones with the 'network=host' filter?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Display the list of running containers and their images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Show me only the Docker image IDs, please. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "List down the images along with their repository, tag, and digest on the server.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "I need to see all the containers that are currently running and having the ancestor Ubuntu. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Display the containers that are both running and healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "I want to see the IDs of all currently running containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Can you provide me with a list of images that are dangling?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f dangling=true"
  },
  {
    "input": "Show me the running Docker containers filtered by creation since 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Present the details of the last container execution right away.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Retrieve a list of images' repository, tag, and ID for those created before the latest nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "List all the containers that are currently running and exposing port 443.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=443'"
  },
  {
    "input": "Display all containers that were started after the commit 3e33ad9a0b2e and are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Can you show me the containers that have exited with a status code of 1?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Display containers that are running based on the Ubuntu image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Retrieve the names of the running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "Stop all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill $(docker ps -q)\""
  },
  {
    "input": "Give me a list of all Docker images, regardless of whether they are dangling or not. Provide their repository, tags, and IDs.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "I am interested to know about the containers that exited and have a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Can you please present the images and their corresponding repository, tag, and ID?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Find all the containers that have exited with a status code of 1.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Get the details of all the running containers created after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Present the Docker images which were created before the image \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "Find all the containers currently running and having volumes mounted at \"/data\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Give me a list of running containers based on the Ubuntu image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "\"Docker, login now! Your username is johndoe.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe\""
  },
  {
    "input": "List all containers that have exited and are based on the Alpine parent image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "List all the containers that are currently running and have the network set to my-network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Give me an overview of the current status and sizes of the containers.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Display all containers and their respective names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "List all the containers that have the volume set to \"/data\" and are based on the \"postgres\" image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "Can you show me the containers that have exited successfully?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'exited=0'"
  },
  {
    "input": "Give me a list of images with the \"maintainer=nginx\" label and the corresponding repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Get the repository, tag, and digest details for each image on the server.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Provide details of the nginx images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show the running containers with a creation time before 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "Fetch the containers that have exited successfully and have a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Bring down all running containers using SIGTERM signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=running)\""
  },
  {
    "input": "List the names of the last five running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "Please ensure that all the containers based on my image are stopped.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q --filter ancestor=my_image)\""
  },
  {
    "input": "Stop all containers running my image.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q --filter ancestor=my_image)\""
  },
  {
    "input": "Display the running containers created after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Terminate any running containers within Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q --filter status=running)\""
  },
  {
    "input": "Provide me with a list of images showing their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me all the containers that are currently running and have the Ubuntu image. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "List all the containers, even the inactive ones. Show the details for the first three.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "Docker, I want you to authenticate yourself on myregistry.example.com. Use the username \"johndoe\" and the password located in the file ~/mypassword.txt.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Hey, log in to my registry now! Your username is \"johndoe\" and the password is \"mypassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Docker, terminate the container named \"my_container\" gracefully using SIGTERM signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM my_container\""
  },
  {
    "input": "Kill all running containers using SIGTERM signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=running)\""
  },
  {
    "input": "Retrieve the containers with the ancestor set as mongo and volumes set to /app.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "Retrieve the images that have been built since the nginx:alpine image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f since=nginx:alpine"
  },
  {
    "input": "Get me the details of containers running on Debian, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "Display the containers that have the status as running and are on the my-network network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "I want to see the status and sizes of the running containers.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Give me the repository, tag, and digest of the images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Show me all containers that are currently running and exposing port 443.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=443'"
  },
  {
    "input": "Give me a list of running containers that are healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "Fetch all containers that were launched later than 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "Please stop confusioner within 10 seconds.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 10 confusioner\""
  },
  {
    "input": "Give me the running containers' names and statuses.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Please provide me with the list of containers having /app as volume and mongo as ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "Reveal the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Can you provide a list of tasks that are currently running in Docker?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "I want to see a list of all containers, no matter their status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Show the containers that have exited before the container having the ID 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "I request the details of the last container executed promptly.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Fetch the images that are not currently being used by any containers.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "List the repository names, tags, and IDs for the dangling images.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Retrieve the images showing their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please show me all the containers that are in a healthy condition.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Get me the list of all containers currently running and having the ancestor Ubuntu. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "List all containers in the frontend network and their respective running statuses.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Show me all the containers with exited status, Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Show the repository, tag, and ID for each image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Give me the details of containers started after 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "Give a detailed list of images with their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Retrieve a list of running containers and filter them by volumes mounted at \"/data\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Bring me the images with their repository, tag, and ID information.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please show the running containers with a creation time prior to 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "What are the containers that are currently running?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "I want to know which containers are running and exposing port 80. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'expose=80'"
  },
  {
    "input": "Give me the containers that have exited and are using the Alpine image as the parent.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Give me the complete details of currently running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Show me the running containers with port 9090 published.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'"
  },
  {
    "input": "Please provide a list of containers created before 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "Retrieve only the containers that have exited, but don't include the one with ID '3e33ad9a0b2e'.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Please provide me with the running container IDs. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Display the containers that have exited, but only those with an ID before '3e33ad9a0b2e'.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "I need to see a list of containers that have a running status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "Only show me the containers that have exited, but don't include the one with ID '3e33ad9a0b2e'.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Tell me which containers are running at the moment.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "Can you show me the digests of all the available Docker images? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Hey there, could you show me the containers that are currently running? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "Show me all the containers that have stopped running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Make sure to login using the username \"marydoe\" and the password \"herpassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe --password=herpassword\""
  },
  {
    "input": "Display the containers which are running and have a healthy status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "I need to see all the images with their complete details.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "Show me a complete list of all containers, regardless of whether they are currently running or stopped. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "List all running containers with port 80 exposed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "Provide me with the list of containers currently running and publishing port 8080. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'publish=8080'"
  },
  {
    "input": "Show me the list of active containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Retrieve the images and IDs for all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Show me a list of running containers that are based on Debian, Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "I want you to stop my container immediately.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 0 my_container\""
  },
  {
    "input": "Provide me with a list of running containers that have port 8080 published. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "List all the images along with their repository, tag, ID, and size, organizing them into a table.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "Mary Doe, please login using your username (marydoe) and password (herpassword).",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe --password=herpassword\""
  },
  {
    "input": "I need to view the last 4 containers that were running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "List down all the running containers created after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Bring me the list of images, including the repository, tag, and ID information.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display a list of containers with the name \"my-container\". ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "Fetch the tags and repository names for the dangling images.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "List all containers with their names, images, and current status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Get the information about images including repository, tag, and digest.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "I want to see the containers that are not running anymore.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Could you show me the running container IDs? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "List the available images and their corresponding repository, tag, and digest.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "\"Docker, log in as johndoe to proceed further.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe\""
  },
  {
    "input": "\"Mary, please authenticate yourself on the new registry located at newregistry.example.org using your Docker credentials.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login newregistry.example.org --username=marydoe\""
  },
  {
    "input": "Show me the containers that have the volume as \"/data\" and are of the \"postgres\" image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "I want to see the tasks running in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Retrieve the images and their corresponding repository, tag, and digest.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "It would be great if you could login to the new registry. Please provide your username and password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login newregistry.example.org --username=marydoe --password=herpassword\""
  },
  {
    "input": "Find all the containers that are currently active and have volumes linked to the \"/data\" path.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Find all the containers named \"my-container\" for me, please. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "Show me only the IDs of the containers that are in a running state. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Please provide me with a list of all the images including their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Get the repository, tag, and digest details for each image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "I want to see the images along with their digests. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Display all the details of currently running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Show me all the exited containers before the one with ID 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Share the names of the last five containers that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "I need to see the running tasks in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Hey Docker, display the running containers, but make sure to filter them with 'network=host'.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Can you show me the running containers?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Show me the containers that were created before 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "Show me the containers which have the ancestor set to mongo and volume set to /app.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "Give me all the container IDs, whether they are running or stopped. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Provide the repository, tag, and ID details for each image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "\"Hey Docker, how about logging in to myregistry.example.com using 'johndoe' as the username?\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe\""
  },
  {
    "input": "Docker, it's time to end ginto with a SIGHUP signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGHUP ginto\""
  },
  {
    "input": "Give me a list of containers running based on the Ubuntu image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Get me the list of containers that exited successfully and have a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "List all containers that are based on the Ubuntu image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Give me the containers that have the status running and are on the my-network network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Give me the information about the containers currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "List all containers with the volume set to \"/data\" and the ancestor set to \"postgres\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "I want to see the names, images, and current status of all containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Show me the containers that are currently running and have an unhealthy health status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'"
  },
  {
    "input": "Docker, I want you to kill the container called \"my_container\" using the SIGTERM signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM my_container\""
  },
  {
    "input": "Give me the Docker images that were created prior to \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "Provide me with a list of currently running containers and their sizes.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Terminate my_container immediately.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 0 my_container\""
  },
  {
    "input": "Give me the details of containers started since 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "Please show me the running containers filtered by network=my-network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Can you provide me with the names and images of all currently running containers?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'"
  },
  {
    "input": "Display the running containers along with their names and statuses.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Show me the running Docker containers created since 4f66ad9a0b2e. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Bring an end to my_container.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill my_container\""
  },
  {
    "input": "Stop all containers currently running in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q)\""
  },
  {
    "input": "List the containers that have a healthy health status only.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Show me the names of containers created before 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "Retrieve a list of containers and their names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Display the running containers that are currently running and have port 8080 published.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Retrieve the digests for all the Docker images. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Docker, I need to see all the running containers that belong to the Debian image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "Return a list of all running containers that have port 8080 published. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "I would like to see the details of all the images including their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "List the nginx images, including the repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "List all the containers and show their status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "List the containers that are currently active and have port 9090 published.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'"
  },
  {
    "input": "List all containers, including stopped ones. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Please show me the running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "List the containers that have been created after 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "Get me only the Docker image IDs. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Get me the details of containers that have exited with a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "List all the containers running and their corresponding images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Please provide me with the details of all the images including their corresponding repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Retrieve the containers that are currently in a healthy state.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Show me the running Docker containers since 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Show me the repository and tag of each image in your collection.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Show me the list of exited containers with a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Give me the IDs of all the containers that are currently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Display the containers that have exited with a status code of 1.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Show me the running containers with the label 'com.example.vendor' set as ACME from vendor ACME.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Enumerate the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Please display only the IDs of Docker images. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Find all containers that are running and have an unhealthy health status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'"
  },
  {
    "input": "Fetch the images and display their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Get me a comprehensive list of all the currently running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Authenticate to the registry at anotherregistry.example.com with your credentials.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "List all containers that are currently running along with their names and images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'"
  },
  {
    "input": "List all the containers that have the name \"my-container\", please. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "Display all the currently active containers without truncating any information.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Generate a list of images' repository, tag, and ID, excluding the ones created after the latest nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Get me the complete information of all currently running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Please show me the list of containers that are currently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "List all the nginx images that are available.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "Please show me all the containers, regardless of whether they are running or stopped. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Retrieve the Docker containers that have exited and have nginx as their ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=nginx'"
  },
  {
    "input": "Show me the containers with the volume set as \"/data\" and the ancestor set as \"postgres\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "I need to see the details of the container you executed most recently.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Find all Docker containers with an exited status and an image ancestry of nginx.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=nginx'"
  },
  {
    "input": "Give me the details of the dangling images including their repository names.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please give me a list of all containers, regardless of their status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "List all the running containers that expose the port 80. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'expose=80'"
  },
  {
    "input": "Please display the dangling images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f dangling=true"
  },
  {
    "input": "Can you show me the digests for all the Docker images? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Give me a list of nginx images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "It's necessary to log in using your credentials \"johndoe\" and \"mypassword\" on anotherregistry.example.com.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Please list all the containers running with the label 'com.example.vendor' set as ACME from the vendor ACME.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Show the Docker images to me.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Show me all the containers, whether running or stopped. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Show me the images before \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "List the images filtered by the label \"maintainer=nginx\" and show their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Login to your account on myregistry.example.com with the username johndoe.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe\""
  },
  {
    "input": "Retrieve the names and statuses of all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Hey Docker, I'd like to see the running containers, but filter them by 'network=host', please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Docker, list only the running containers that are using the 'network=host' filter.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Show me the running containers that have an unhealthy health status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'"
  },
  {
    "input": "List all containers that are running and have a healthy status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "Give me the details of the 4 most recent containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "Can you list the containers that have exited without any errors?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'exited=0'"
  },
  {
    "input": "To continue, log in to myregistry.example.com. Make sure to use the username johndoe.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe\""
  },
  {
    "input": "Stop all running containers on Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q --filter status=running)\""
  },
  {
    "input": "Share with me the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Hey Docker, can you please show me all the Docker images? This should include the dangling ones. Additionally, provide their repository, tags, and IDs.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Tell me which containers are running at the moment. Limit to the first five.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "Display the dangling images and their repository names, tags, and IDs.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Retrieve the containers that are currently running and have an unhealthy health status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'"
  },
  {
    "input": "Show me containers running with the Ubuntu ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Show me all the running containers that are based on Debian.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "Give me the container IDs of all containers, irrespective of their status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "List all dangling images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f dangling=true"
  },
  {
    "input": "Give me a list of all the containers running in the frontend network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Please show me the running Docker containers since 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "List the last 4 containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "List all the running containers with the label 'com.example.vendor' set as ACME from the ACME vendor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Show me the running containers that have the port 80 exposed. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'expose=80'"
  },
  {
    "input": "I want to know the names and statuses of all running containers, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Please display the containers that are in exited status, Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Provide the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "\"Docker, it's time to log in to myregistry.example.com using the username 'johndoe'.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe\""
  },
  {
    "input": "Retrieve the images maintained by nginx and show their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display the details of the last 4 containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "I would like to see a list of running containers and their images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Docker, terminate every single container with immediate effect!",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q)\""
  },
  {
    "input": "Take down any containers that are running my image.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q --filter ancestor=my_image)\""
  },
  {
    "input": "Docker, display the running containers with the ancestor as Debian.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "Docker, it's time to log in to anotherregistry.example.com as \"johndoe\" and gain access.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe\""
  },
  {
    "input": "Generate a list of all images' repository, tag, and ID for those created before the latest nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "List the status and sizes of all the running containers.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Could you please return a list of containers running on Debian?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "Show me the running containers that have a healthy status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "Show me the list of running container IDs. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Do not truncate any details while listing the images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "List all containers and their respective images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "I want to know the tasks running in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Return a list of running containers with published port 8080. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Give me a list of containers named \"my-container\". ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "I need to see the information about the last 4 containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "I would like to see the names and images of all containers that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'"
  },
  {
    "input": "Show me all the containers that have exited before container with the ID 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Get me the list of containers that have exited, but exclude the one with ID '3e33ad9a0b2e'.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Display all Docker images, including the ones that are not currently active.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --all"
  },
  {
    "input": "Please provide me with the unique identifiers of all containers, regardless of their status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Fetch the repository names, tags, and IDs of the images that are not associated with any containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me the dangling images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f dangling=true"
  },
  {
    "input": "Show me the list of containers that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "I want only the Docker image IDs.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Provide me with the Docker images that were built before the image tag \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "Get me the repository, tag, and ID of the images that were created before the latest nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please provide me with the IDs of all containers, regardless of their status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "List all Docker image IDs. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Show me the running containers that are currently running on port 8080. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "I want to see a list of all containers, no matter if they are running or stopped. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Give me the full details of all the currently running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Display all the containers running with the ACME label set by the ACME vendor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "End the functioning of the container called \"confusioner\" immediately.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop confusioner\""
  },
  {
    "input": "Retrieve the last 4 containers that were active.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "Tell me the information about containers that have exited successfully and have a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "List down all the running containers on the my-network network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "List the images in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "I need a list of the container IDs for the running containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Provide me with the running containers filtered by network=my-network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Retrieve the list of running containers derived from the Debian image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "Terminate my_container instantly.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill my_container\""
  },
  {
    "input": "I am interested in knowing the list of containers that exited and have a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Please display the repositories and tags of your images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Provide a list of containers that are currently running and have port 443 exposed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=443'"
  },
  {
    "input": "Can you show me the containers currently running with port 8080 published? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'publish=8080'"
  },
  {
    "input": "I want to know which container you executed recently.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Please download the nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "List all the containers that have exited and filter them by ID, excluding '3e33ad9a0b2e'.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "List the containers in the frontend network that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "I would like to see the names and statuses of all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Give me the details of all Docker images, even the inactive ones.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --all"
  },
  {
    "input": "List all the images with their repository, tag and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Can you show me the containers that are running and have port 8080 published? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'publish=8080'"
  },
  {
    "input": "List all the containers that are currently active and have volumes linked to the \"/data\" path.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Show me a comprehensive list of running containers and their sizes.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Fetch all containers that were launched after 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "Showcase the repository, tag, and ID for all images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me the dangling images and their repository names.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display all the available Docker images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "List all the images and include their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Fetch me a comprehensive list of all active containers without any truncation.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Please halt all running containers in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q --filter status=running)\""
  },
  {
    "input": "Show me all the running containers that have port 80 exposed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "Get me the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Tell me the names and statuses of all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Show me a list of running containers that are rooted from Debian, Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "Hi Docker, could you please grant me access by logging me in with the username \"marydoe\"?",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe\""
  },
  {
    "input": "Display the containers that have started since 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "Can you display the containers that have exited and exclude the one with an ID of '3e33ad9a0b2e'?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "List all the running containers created after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Give me the containers that are in a stopped state.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Find all the containers that have the volume set to \"/data\" and are based on the \"postgres\" image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "Ensure that you are logged in using Mary Doe's credentials - username: marydoe, password: herpassword.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe --password=herpassword\""
  },
  {
    "input": "Docker, can you kindly stop my_container1 and my_container2 by sending them a SIGINT signal for a graceful termination?",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGINT my_container1 my_container2\""
  },
  {
    "input": "Docker, log in to myregistry.example.com right now! Don't forget to use the username \"johndoe\" and the password \"mypassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Give me the containers that are currently running and in a healthy state.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "Provide me the images and their associated repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display the containers that are not running and have the Alpine image as their parent.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Display all the containers that are currently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "Could you provide the information about the running containers?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "Fetch the images and show their repository, tag, and ID values.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Could you provide me the IDs of Docker images? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Get the images with the label \"maintainer=nginx\" and include their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Give me a list of containers created before 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "Display the containers with the health status as healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Find containers that are running and have been created after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Hey there, display the containers that have a running status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "I need you to halt any running my_image containers.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q --filter status=running --filter ancestor=my_image)\""
  },
  {
    "input": "List all the repositories and tags associated with your images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Please give me the list of containers that are running on the my-network network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Show me the list of containers currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "I want to see the comprehensive information about all Docker images, including the inactive ones.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --all"
  },
  {
    "input": "What containers are currently running? Include only the first five.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "Retrieve the containers that are currently running on the my-network network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Login to the new registry using your username and password, please.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login newregistry.example.org --username=marydoe --password=herpassword\""
  },
  {
    "input": "Give me the repository, tag, and digest details of all the images on the server.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Give me a list of the running containers with the Ubuntu image. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Display the Docker images created prior to \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "Retrieve the containers that have volumes mounted at \"/data\" and are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Docker, I command you to log in immediately using your username and password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password=mypassword\""
  },
  {
    "input": "Retrieve the containers currently running and having the ancestor Ubuntu. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Could you provide the information about the last five running containers?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "List all the running containers with the Ubuntu image. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Docker, please log in to myregistry.example.com using the credentials found in ~/mypassword.txt. The username is \"johndoe\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Show me the names and images of all containers that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'"
  },
  {
    "input": "List all the containers that are currently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "Please provide me with the details of containers that exited successfully and have a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Give me the IDs of the containers that are currently in the running state. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "List all the running containers that have port 443 exposed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=443'"
  },
  {
    "input": "Kindly log in to myregistry.example.com by entering your username as johndoe.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe\""
  },
  {
    "input": "Display the running containers and filter them based on volumes connected to \"/data\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Give me a list of images maintained by nginx and include the details of their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Could you provide the information about the first five running containers?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "Show me the details of nginx images, such as the repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Could you please show me all the Docker images, including their repository, tags, and IDs? This should also include the dangling ones.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "List all the containers with the status as \"exited\" and the ancestor set as Alpine.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Go ahead and log in to myregistry.example.com using \"johndoe\" as your username and \"mypassword\" as your password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Please provide the running containers created before 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "Please display all the containers with the volume as \"/data\" and the image as \"postgres\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "List the running containers and include their names and statuses.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "What are the containers that are currently active?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Please show me the names and statuses of all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Display the status of all containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "List the repository names, tags, and IDs for the images that are not in use.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please provide me with a list of containers running with the label 'com.example.vendor' set as ACME from the vendor ACME.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Present me with a detailed list of currently active containers without any truncation.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Retrieve the containers that are running and were created after the 3e33ad9a0b2e commit.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Show me the containers currently running and exposing port 8080. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'publish=8080'"
  },
  {
    "input": "Give me a list of running containers with their names and statuses.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Show me a summary of the running containers and their sizes.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "\"Docker, I need you to log in to myregistry.example.com. Please use 'johndoe' as your username.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe\""
  },
  {
    "input": "Provide a table of images that includes information like the repository, tag, ID, and size.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "Get me the details of the 4 most recent containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "Give me the available Docker images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "List all active containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Please log in with your username and password in order to access the container registry.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Show me the images and IDs of all the running containers, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Get the last 4 containers that were recently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "Show me the running containers with volumes mounted at \"/data\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Retrieve the list of tasks running in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Please show me the list of running containers with port 443 exposed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=443'"
  },
  {
    "input": "Show me a summary of the containers that are currently running and their sizes.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Provide me with information about running containers that are based on Debian.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "List all the containers that have the name \"my-container\". ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "Give me the details of containers that have exited and are using Alpine as the base.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Display the images along with their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "List all containers that have exited and are using Alpine as their parent image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Give me a list of containers that are running and belong to the frontend network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "List all running containers in the frontend network and their running statuses.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Display the list of all the images along with their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Docker, I need you to log in to my registry at myregistry.example.com. Use the username \"johndoe\" and the password \"mypassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Docker, kindly log in to myregistry.example.com with the username \"johndoe\" and password from ~/mypassword.txt.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Show containers that expose port 80 and are running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "Show all the images without missing any details.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "Docker, list all the containers with exited status, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Check the status of all containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Terminate all running containers silently.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=running)\""
  },
  {
    "input": "Show me the running containers that are part of the frontend network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Docker, please kill my_container gracefully using the SIGINT signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGINT my_container\""
  },
  {
    "input": "It's time to log in to myregistry.example.com. Ensure to use your username as \"johndoe\" and your password as \"mypassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Can you please fetch me the nginx images along with their repository, tag, and ID?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "List all running containers that are in a healthy state.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "Can you show me the first five running containers?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "I need to see all the containers that are healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Give me the list of containers that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "List the running containers with an unhealthy health status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'"
  },
  {
    "input": "List all the containers in the frontend network and their running status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Please show me the unique identifiers of all containers, regardless of their current state. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "I want to see the list of all containers, including the inactive ones. Give me information about the first three.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "Give me only the Docker image IDs. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Give me a list of running containers that are in a healthy condition.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "Retrieve the running containers labeled with 'com.example.vendor' set as ACME from the vendor ACME.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Show me all the containers in the frontend network filtered by their running status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Let me know the sizes of all the containers.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Display the available Docker images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "I only want to see the Docker image IDs. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Help me find the nginx images and display their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Docker, I request you to log in to anotherregistry.example.com. Your username is \"johndoe\" and password is \"mypassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Show me the running containers with port 443 exposed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=443'"
  },
  {
    "input": "Give me a list of containers in the frontend network, filtered by running status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Display running containers filtered by the Ubuntu ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Can you provide me with the IDs of all containers, whether stopped or running? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Docker, please end the container named \"ginto\" by sending the SIGTERM signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM ginto\""
  },
  {
    "input": "Login to anotherregistry.example.com using your personal username (\"johndoe\") and password (\"mypassword\").",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Give me the list of Docker images that were created before \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "Please log me in using your credentials, Johndoe.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe\""
  },
  {
    "input": "Display the list of running containers that are in a healthy state.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "Display all the Docker images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Please display all the Docker images, even the ones that are not being used at the moment.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --all"
  },
  {
    "input": "List out the images along with their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Can you tell me the status of all containers, including the ones that are not running? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Give me an overview of the most recent container you launched.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "List all the docker containers that have exited with a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "I need a list of all the image repositories and their respective tags.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Display the list of containers that are running and have a healthy status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "I want an overview of all Docker images, including the ones that are not currently in use.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --all"
  },
  {
    "input": "I need the IDs of all containers, regardless of their status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Provide me with a list of all the Docker images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Give me the repository, tag, and digest details of all the images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Please provide the status of all containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Provide me with the running containers on the my-network network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Give me the details of the images that are not associated with any containers.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Give me an update on the status and sizes of all the containers.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Show running containers with the Ubuntu ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Show me the current nginx images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "Show me the running containers that have the ACME label from vendor ACME.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Please show me only the IDs of Docker images. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Print the images in a table that includes the repository, tag, ID, and size.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "List all containers with their names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Display the repository, tag, and digest of all the images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Retrieve the containers named \"my-container\". ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "I would like to see a list of running containers along with their images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Please stop all running instances of my_image container.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q --filter status=running --filter ancestor=my_image)\""
  },
  {
    "input": "Provide me with a list of containers that have the label 'com.example.vendor' set as ACME and currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Docker, ensure the container with the name \"my_container\" is terminated by sending the SIGTERM signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM my_container\""
  },
  {
    "input": "Show me the repository names, tags, and IDs of the images that are not being used.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "It would be great if you could authenticate yourself on anotherregistry.example.com with your username \"johndoe\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe\""
  },
  {
    "input": "Get me the containers that are currently running and having the ancestor Ubuntu. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Terminate my_container.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill my_container\""
  },
  {
    "input": "Docker, I need you to log me in as Johndoe.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe\""
  },
  {
    "input": "Please provide me with the details of the three most recent containers, regardless of their status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "Give me a list of containers that are currently running and have port 8080 published. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "I need the repository, tag, and digest of all the images in the system.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "\"Hey Docker, before proceeding further, make sure you are logged into the new registry on newregistry.example.org. I will need your username for that.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login newregistry.example.org --username=marydoe\""
  },
  {
    "input": "Show the containers that have exited and have a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Show me all the running containers with full information.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "List all the available images stored in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Show me a list of running containers rooted from Debian, Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "List the running tasks in Docker, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Provide me with information about containers running on the Debian image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "List all the images along with their repository, tag, ID, and size.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "Terminate all the containers that are in a exited state. ",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=exited)\""
  },
  {
    "input": "Display the active containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "List all the containers with the status as \"exited\" and kill them. ",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=exited)\""
  },
  {
    "input": "I would like to see the details of all the images including their corresponding repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Let me know the current status and sizes of the containers that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "\"Hey Docker, authenticate yourself using your username so you can access the new registry at newregistry.example.org.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login newregistry.example.org --username=marydoe\""
  },
  {
    "input": "I want to see all containers, showing their names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Docker, kindly log in to myregistry.example.com using the username \"johndoe\" and the password stored in ~/mypassword.txt. Please make sure you authenticate successfully.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Please fetch the containers that have exposed port 80. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'expose=80'"
  },
  {
    "input": "Please provide me with your login credentials from the file so that I can authenticate you.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Please provide a list of containers currently running on Debian.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "Fetch the digests for all the available Docker images. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Show me the digests of all the images in Docker. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "List the running containers which were created after the 3e33ad9a0b2e commit.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Show me the images in their entirety, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "Stop my_container within 10 seconds, please.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 10 my_container\""
  },
  {
    "input": "Hey Docker, please show me the running containers and filter them by 'network=host'.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Retrieve the repository, tag, and ID of the images that were created before the latest nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display running containers with the Ubuntu image as their ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "List all the running containers with their names and statuses.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Show me all containers since 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "Show the containers that have exited before the container with the ID 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "I want to know the container's status and size.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Give me the container IDs of all containers, regardless of whether they are running or stopped. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Find the containers that have exited before the one with the ID 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Give me a list of images with their repository, tag, and ID, but only for those created before the latest nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display the images and their associated repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display the containers that have port 8080 exposed and are currently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'publish=8080'"
  },
  {
    "input": "Could you display the containers that have exited without errors?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'exited=0'"
  },
  {
    "input": "I want to see the list of containers that have exited, but exclude the one with ID '3e33ad9a0b2e'.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Give me a list of images that have the label \"maintainer=nginx\" and their respective repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display the containers running in the frontend network with their respective statuses.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Display the containers that have volumes connected to \"/data\" and are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Docker, I request you to log in to the registry yetanotherregistry.example.net as user \"marydoe\" with the password \"herpassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login yetanotherregistry.example.net --username=marydoe --password=herpassword\""
  },
  {
    "input": "Docker, I want you to list the running containers, but only show me the ones that are using the 'network=host' filter.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Display the Docker images created before the image tag \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "Fetch the tags and IDs of the images that are not being used.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Just tell me about the container you ran recently right now.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Show me all the containers that are currently running and having the ancestor Ubuntu. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Give me the running container IDs, please. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Could you please login to the new registry? Use your username and password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login newregistry.example.org --username=marydoe --password=herpassword\""
  },
  {
    "input": "I'm interested in knowing the names and statuses of all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Fetch the repository, tag, and ID of the images that were created before the latest nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display the nginx image repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Find the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Can you fetch all running containers and their names and statuses?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Show me the running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Give me a list of running containers with a creation time before 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "Please provide me with the list of containers which have the ancestor as mongo and volumes set to /app.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "Fetch the containers that have exited and have a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Retrieve the available images in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Please list the containers with the name \"my-container\" for me. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "Provide me with the complete list of running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Please provide me with the list of containers that have exited and have a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Please show me the currently running containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "Retrieve containers that have the volume \"/data\" and are based on the \"postgres\" image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "I want to see only the IDs of the containers that are currently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Hey Docker, I only want to see the running containers that are using the 'network=host' filter.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Display the repository names, tags, and IDs of the images that are dangling.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Tell me which containers are running at the moment. Limit to the last five.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "Docker, please stop all the containers derived from my image.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q --filter ancestor=my_image)\""
  },
  {
    "input": "Please kill my_container1 and my_container2 gracefully utilizing the SIGINT signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGINT my_container1 my_container2\""
  },
  {
    "input": "Please stop my_container1 and my_container2.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop my_container1 my_container2\""
  },
  {
    "input": "Retrieve a list of images' repository, tag, and ID, but only for those created before the latest ginto image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f \"before=ginto:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Can you list the containers that have exited successfully?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'exited=0'"
  },
  {
    "input": "Cease operation of any my_image containers that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q --filter status=running --filter ancestor=my_image)\""
  },
  {
    "input": "I would appreciate it if you could show me all the Docker images along with their repository, tags, and IDs. This should include the ones that are dangling.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show all the running containers with the Ubuntu image. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Show me the repository, tag, and digest for all the images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Please show me the IDs and images for all the running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Retrieve the images and arrange them in a table showing the repository, tag, ID, and size.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "Show me the details of all active containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Hey Docker, why don't you log in to anotherregistry.example.com using the username \"johndoe\"?",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe\""
  },
  {
    "input": "I need to see the running containers with port 80 exposed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "Retrieve the Docker images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Docker, cease all currently running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q)\""
  },
  {
    "input": "I need to see the containers called \"my-container\". ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "Display the containers that are currently running and exposing port 80. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'expose=80'"
  },
  {
    "input": "Fetch me the list of all the Docker images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Can you show me the containers that are currently healthy?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Give me a list of healthy containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Remove the containers that are already stopped. ",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=exited)\""
  },
  {
    "input": "Display the IDs of all containers, regardless of if they are running or stopped. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Show the nginx images present in the repository.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "Hey there, Docker! It would be awesome if you could log in to yetanotherregistry.example.net. Use \"marydoe\" as the username and \"herpassword\" as the password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login yetanotherregistry.example.net --username=marydoe --password=herpassword\""
  },
  {
    "input": "Give me the complete list of active containers without any truncation.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Fetch the tags and IDs of the dangling images.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Give me the last 4 containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "Give me the images in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "In 10 seconds, kindly stop my_container.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 10 my_container\""
  },
  {
    "input": "Could you please fetch the names and statuses of all running containers?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Display the images which were created prior to \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "Retrieve a list of all the images showcasing their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me the containers that are running and have the Ubuntu image as their ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Please log in, Docker. Provide your username and password for authentication.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password=mypassword\""
  },
  {
    "input": "Hey Docker, can you show me the running containers and filter them so only those with 'network=host' are displayed?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Display the containers that are running and are on the my-network network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Docker, it would be great if you could pause all the running containers within 5 seconds in a gentle manner.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 5 $(docker ps -q --filter status=running)\""
  },
  {
    "input": "Please give me the list of containers that are running and on the my-network network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Get the digests of all the Docker images. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Docker, please authenticate yourself using the provided username and password to access the container registry.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Display all the running containers filtered by the ACME label from vendor ACME.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Show me the running containers since 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "Deliver the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Give me a list of containers that belong to the frontend network and are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Retrieve the images and show their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please display the images and IDs of all the running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Show me the list of the containers currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "List all running containers that were created after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Display the images that have been generated since the nginx:alpine image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f since=nginx:alpine"
  },
  {
    "input": "List all the Docker images, including the dangling ones, and display their repository, tags, and IDs.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Get a list of containers that exited before container 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Give me a list of running containers with the label 'com.example.vendor' set as ACME from vendor ACME.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "I want the complete information of currently running containers displayed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Hey Docker, it would be great if you could log me in using the username \"marydoe\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe\""
  },
  {
    "input": "Find all the images that are maintained by nginx and provide information about their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "I would like to see the images generated after the nginx:alpine image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f since=nginx:alpine"
  },
  {
    "input": "Display the containers with the ancestor set as mongo and volume set to /app.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "I need to see a list of containers that have exited, but not the one with ID '3e33ad9a0b2e'.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Find all images with the label \"maintainer=nginx\" and show their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Shut down my_container nicely with the SIGINT signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGINT my_container\""
  },
  {
    "input": "Fetch me the nginx image from the source.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "Give me a list of images with the \"maintainer=nginx\" label and show their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Fetch the details of all running containers created after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Authenticate yourself, Docker, with the supplied username and password to access the container registry.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "\"Hey Docker, login required! Use the username johndoe.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe\""
  },
  {
    "input": "Present the images with their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Retrieve the repository, tag, and digest of the available images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Can you show me the images created after the nginx:alpine image?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f since=nginx:alpine"
  },
  {
    "input": "Docker, authenticate yourself using the username and password provided to gain access to the container registry.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Give me the list of running Docker containers filtered by creation since 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "I expect you to log in to anotherregistry.example.com using the username \"johndoe\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe\""
  },
  {
    "input": "Check the status of each and every container. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Display the repository, tag, and digest information of the images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Give me information about the containers that have exited with a code of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'exited=0'"
  },
  {
    "input": "Show me the names and statuses of all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Please display the images that are dangling.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f dangling=true"
  },
  {
    "input": "Can you please list all the containers with exited status?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Please show me the dangling images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f dangling=true"
  },
  {
    "input": "I would like to see the names and statuses of all running containers, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Fetch all the images with their corresponding repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Give me the IDs of the containers currently in a running state. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Docker, please login to the container registry with the provided username and password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Retrieve the last 4 containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "List only the Docker image IDs. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Inform me about containers that have exited with a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Display the complete list of currently active containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Give me all the containers that have stopped running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Give me a list of containers that have exited with a status code of 1.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Fetch me the list of available nginx images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "Display the images along with their complete information.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "List all the running containers filtering by the label 'com.example.vendor=ACME'.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'label=com.example.vendor=ACME'"
  },
  {
    "input": "Could you show me the containers called \"my-container\"? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "Unveil the images' repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please give me the Docker image IDs. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Get a list of containers that are running and were created after the 3e33ad9a0b2e commit.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Tell me the information about containers that exited successfully and have a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Get the last 4 containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "Johndoe, kindly log me into the Docker platform.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe\""
  },
  {
    "input": "List all containers that are currently running in the frontend network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Retrieve the running containers with the Ubuntu image. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Give me a list of running containers that are based on the Ubuntu image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "End the execution of all currently running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=running)\""
  },
  {
    "input": "Give me a list of containers running with the Ubuntu image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "I need to see all the containers with a health status of healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "List all active containers without any truncation.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Docker, I'm interested in seeing the running containers, but only the ones with the 'network=host' filter.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Display the running Docker containers that were created after 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Can you please show me the images and their corresponding repository, tag, and ID?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please ensure that the container with the name \"my_container\" is killed using the SIGTERM signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM my_container\""
  },
  {
    "input": "It would be great if you could log in to my registry using your credentials as \"johndoe\" and \"mypassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Give me a list of containers that are marked as healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "List down all the running Docker containers created after 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "\"Hey, please log in to myregistry.example.com with the username johndoe.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe\""
  },
  {
    "input": "I'm interested in seeing the complete information of active containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Give me the names of the repositories and their tags for the dangling images.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Retrieve the images with the \"maintainer=nginx\" label and provide their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Retrieve the images and IDs of all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "List all running containers and include their names and statuses.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Show me the list of currently running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Show me the containers that are running and have port 8080 published. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Display the complete status of all containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Show me the containers with the status set as \"exited\" and the image ancestor set as Alpine.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Hey Docker, show me all the Docker images, including the ones that are dangling. I need their repository, tags, and IDs.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "List all the available images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "List all containers that are running and marked as healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "Fetch the images along with their repository, tag, and digest.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Hello Docker, it would be great if you could log in to the registry yetanotherregistry.example.net. Your username is \"marydoe\" and your password is \"herpassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login yetanotherregistry.example.net --username=marydoe --password=herpassword\""
  },
  {
    "input": "Show me all the available nginx images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "I would like to see a list of all the images including their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "List the images with the label \"maintainer=nginx\" and show their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me the containers that are running on port 8080. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Please provide the details of containers that have exited without errors.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'exited=0'"
  },
  {
    "input": "I want you to kill all running containers in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q)\""
  },
  {
    "input": "Give me a list of containers with the Ubuntu image as their ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "List all the running Docker containers created since 4f66ad9a0b2e. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Fetch the dangling images along with their repository names, tags, and IDs.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please use your credentials, Johndoe, to login to Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe\""
  },
  {
    "input": "I need the information about containers that have exited and have a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Get me the list of images since the nginx:alpine image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f since=nginx:alpine"
  },
  {
    "input": "Share the details of your most recent container execution.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Show me the images and their corresponding repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Provide me with a list of all Docker images, including the ones not in use at the moment.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --all"
  },
  {
    "input": "Give me a list of containers that are running and expose port 80.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "Retrieve a list of containers and their names, images, and current status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Hey Docker, would you mind stopping all the running containers in a gentle way within 5 seconds?",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 5 $(docker ps -q --filter status=running)\""
  },
  {
    "input": "Find all containers that have exited, but make sure to leave out the one with ID '3e33ad9a0b2e'.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Give me a list of images that have a creation timestamp prior to \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "Please list the containers with port 8080 published. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'publish=8080'"
  },
  {
    "input": "Display the IDs of only the containers that are running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Can you please provide me with the details of nginx images?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "Show me a detailed list of all the currently active containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Display the images with dangling status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f dangling=true"
  },
  {
    "input": "Filter the images based on the label \"maintainer=nginx\" and display their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Give me the list of tasks currently running in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Show me the details of the three last containers, whether active or inactive.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "Stop the container named \"my_container\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe --password-stdin \u003c ~/herpassword.txt\""
  },
  {
    "input": "Print the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Find containers that are currently running and were created after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Please show me the status and sizes of all currently running containers.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Docker, show me the running containers, but make sure to filter them with 'network=host'.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Bring me the list of all containers that exited prior to the container with ID 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Show me a list of the running containers with the ACME label from the vendor ACME.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Retrieve containers that have the volume set as \"/data\" and are of the \"postgres\" image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "List all the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "I am interested in knowing the details of containers that exited and have a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Find all Docker containers with an exited status and an ancestor of nginx.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=nginx'"
  },
  {
    "input": "I want you to login to the new registry with your username and password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login newregistry.example.org --username=marydoe --password=herpassword\""
  },
  {
    "input": "Show me all the containers that are currently running with the ancestor Ubuntu. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "List all the available Docker images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Show me all the containers, whether they are running or stopped. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Give me the details of images that are maintained by nginx, including their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please stop all running containers immediately.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=running)\""
  },
  {
    "input": "Please show me all the containers in exited status, Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Retrieve the running Docker containers filtered by creation since 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Display the running containers with the ACME label from the ACME vendor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Make sure to log in to anotherregistry.example.com using the provided username \"johndoe\" and password \"mypassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Hey there, show me the running containers with the filter 'network=host'. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Authenticate yourself as Mary Doe by entering the username \"marydoe\" and the password \"herpassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe --password=herpassword\""
  },
  {
    "input": "I want to see the status of all containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "List all running containers created after the 3e33ad9a0b2e commit.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Can you show me the containers that have the ancestor as mongo and volumes set to /app?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "Show me all the containers in the frontend network and filter them by running status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Hey Docker, display all the containers with exited status, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Give me the list of containers having /app as volume and mongo as ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "Give me a list of containers and their respective names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Docker, terminate my_container1 and my_container2 immediately!",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop my_container1 my_container2\""
  },
  {
    "input": "Show me all the containers that have exited with a specific ID before '3e33ad9a0b2e'.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "List all containers with the corresponding names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Give me a detailed overview of the nginx images, including their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Hey Docker, can you please show me the containers that are in exited status?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "I need a list of all the images and their corresponding digests. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Show me the details of the container run last without hesitation.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Can you list the containers currently running with port 8080 published? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'publish=8080'"
  },
  {
    "input": "Show me the repository, tag, and digest for all the images on the server.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "I want to see a list of all containers, irrespective of their status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "I want to see the list of all containers, including the inactive ones. Fetch the details for the first three.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "Display the status of each container, regardless of their state. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Provide me with information about running containers that are Debian-based.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "Display the IDs of all the dangling images.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Shut down every single container without delay!",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q)\""
  },
  {
    "input": "I need information about nginx images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please show me the images created after the nginx:alpine image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f since=nginx:alpine"
  },
  {
    "input": "Provide me with the repository, tag, and digest of the available images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Display the available nginx images in the store.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "Docker, kindly terminate app within 10 seconds.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 10 app\""
  },
  {
    "input": "List all active containers in full detail.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "I want to see all the containers currently running with the label 'com.example.vendor' set as ACME from the ACME vendor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "\"Hey, could you please log in with username johndoe?\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe\""
  },
  {
    "input": "I would like to see the images and their corresponding repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Give me the repository, tag, and digest for all the images in the system.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "I would like you to list the repositories and tags of your images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Give me a list of running containers with the ancestor Ubuntu. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Please, return the details of the currently running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "Give me a list of the images that are not currently being used by any containers.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me the running containers filtered by the ACME label from the vendor ACME.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Get the images and display their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "List all the containers which are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Give me a list of running containers created since 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Find the images' repository, tag, and ID for those that were created before the latest nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please, return the details of the last five running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "Show me the complete information of all the running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "To gain access, submit your username and password from the text file for successful login.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Please show me the IDs and images of all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Fetch me the containers that are running and are on the my-network network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Please list all the containers, regardless of whether they are running or stopped. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Display the images' repository, tag, and digest.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Please stop my_container gracefully using the SIGINT signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGINT my_container\""
  },
  {
    "input": "Display the containers with running status and unhealthy health status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'"
  },
  {
    "input": "Give me a list of running containers with Ubuntu as their ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Please provide me with the IDs of all containers, regardless of whether they are running or stopped. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "I need to see the containers that are running and expose port 80.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "Display running containers based on the Ubuntu image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Give me the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "I would appreciate it if you could display the names and statuses of all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "I need to see the running containers that have port 80 exposed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "Fetch the list of containers that have exited before 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "List the names of running containers prior to 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "Show me only the IDs of the containers that are running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "List the containers that are currently in a healthy condition.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Get the digests of all the images available in Docker. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Stop the container named \"my_container\" using the SIGTERM signal, Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM my_container\""
  },
  {
    "input": "List down the images with their repository, tag, and digest.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Display the names and images of all containers that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'"
  },
  {
    "input": "List only the IDs of the containers that are running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "List the Docker images with a prerequisite of \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "List all the created containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=created'"
  },
  {
    "input": "It will be appreciated if you log in to myregistry.example.com using \"johndoe\" as your username and \"mypassword\" as your password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Find all the containers that have exited before container ID 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Return the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Do me a favor and log in to myregistry.example.com. Use the username johndoe.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe\""
  },
  {
    "input": "Show me all the running containers with port 8080 published. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'publish=8080'"
  },
  {
    "input": "Retrieve the list of tasks running in Docker, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Docker, let's authenticate with the username Johndoe.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe\""
  },
  {
    "input": "Display the last five running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "I want to see the list of all containers, even the inactive ones. Display information about the first three.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "I need information about containers that have exited with a code of zero.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'exited=0'"
  },
  {
    "input": "Retrieve the images with their respective repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "\"Please log in to Docker with the username johndoe.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe\""
  },
  {
    "input": "Provide a list of containers and their status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Retrieve the containers that have exited before container ID 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "List the running containers for me, please. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "I need to view a list of images with their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Could you gracefully kill ginto with the SIGINT signal, please?",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGINT ginto\""
  },
  {
    "input": "Provide the list of images without any missing information.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "Display all the containers currently running and having the ancestor Ubuntu.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Docker, please authenticate yourself by logging in to myregistry.example.com. Use \"johndoe\" as the username and \"mypassword\" as the password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Hey, Docker! Log in to myregistry.example.com right now! Your username is \"johndoe\" and the corresponding password is stored in ~/mypassword.txt. Don't forget!",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Secure your access, Docker, by logging in to anotherregistry.example.com as \"johndoe\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe\""
  },
  {
    "input": "Show me a complete list of all containers, including those that are currently running or stopped. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Get a list of containers created after 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "List out all the Docker images, even the ones that are currently not active.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --all"
  },
  {
    "input": "Show me all the running containers with the ancestor as Debian, Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "Get me a list of containers that are running and were created after the 3e33ad9a0b2e commit.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Please show me the running Docker containers filtered by creation since 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Stop my container immediately.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 0 my_container\""
  },
  {
    "input": "Hey Docker, can you list all the running containers and apply a filter for 'network=host'?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Please provide me with the list of running containers that have port 8080 exposed. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'publish=8080'"
  },
  {
    "input": "Retrieve containers that have the volume as \"/data\" and are based on the \"postgres\" image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "Please log in to my registry with your username as \"johndoe\" and password as \"mypassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Give me a list of the running containers and their respective sizes.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Retrieve the containers with volumes connected to \"/data\" that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Retrieve the images and present their repository, tag, and ID values.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Docker, I command you to stop my_container1 and my_container2.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop my_container1 my_container2\""
  },
  {
    "input": "Display the running containers that have port 443 exposed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=443'"
  },
  {
    "input": "Provide me with a list of running containers with the ACME label from the ACME vendor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "I need a listing of nginx images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "\"Mary, please make sure you log in to the new registry at newregistry.example.org. Use your username as Mary Doe.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login newregistry.example.org --username=marydoe\""
  },
  {
    "input": "List all the containers that are currently running and have port 443 exposed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=443'"
  },
  {
    "input": "I need you to list the information of the last container run.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "I want to see the images along with their repository, tag, and digest.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Show the images along with their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display the images in table form, with information regarding the repository, tag, ID, and size.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "I want to see all the containers currently running and labeled as ACME from the ACME vendor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Please provide me with the list of running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Please show me the containers that have exited with a status code of 1.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "List all available nginx images with their relevant details.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display the containers that have port 9090 published and are currently active.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'"
  },
  {
    "input": "Tell me the information about containers that exited and have a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Display the running containers that have a creation time before 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "Inform me about the latest executed container, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Display the containers that are currently running and have port 9090 published.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'"
  },
  {
    "input": "Only show me the containers that are in a healthy state.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Get me the images and their corresponding repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me the list of the first five containers currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "Please show me the containers with the name \"my-container\", please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "Filter and show me only the containers that have a health status of healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "List all the containers running since 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "Display the containers that have started after 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "Get me the repository, tag, and digest for the images I have.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Show the running containers since 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "Can you display the names and images of all running containers?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'"
  },
  {
    "input": "List all the running Docker containers that started from 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "I would like to inspect the repositories and tags used for your images, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Make sure you specify your username as \"johndoe\" and password as \"mypassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Give me a list of containers that expose port 80 and are running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "Display the running tasks in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Display the images in table form, containing the repository, tag, ID, and size.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "I want to see all the containers that are currently running after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Display a comprehensive list of nginx images, including the repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Could you log in to anotherregistry.example.com? The username is \"johndoe\" and the password is \"mypassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Find and display all the containers named \"my-container\", please. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "Show me a list of running containers that have Debian as the ancestor, Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "Can you display the containers that have exited with a status code of 1?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Docker, I need to log in, so please authenticate me using the username \"marydoe\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe\""
  },
  {
    "input": "Docker, I need you to stop reverseProxyGinto by sending a SIGHUP signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGHUP reverseProxyGinto\""
  },
  {
    "input": "Present the images that have a creation timestamp earlier than \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "List out the containers running with Debian as their base image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "Kindly log in to anotherregistry.example.com using your username \"johndoe\" and password \"mypassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Get me the details of containers running on the Debian image, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "Please halt all currently running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=running)\""
  },
  {
    "input": "List all containers that are running and have port 443 exposed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=443'"
  },
  {
    "input": "Show me the images filtered by the label \"maintainer=nginx\" and include their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Hey Docker, authenticate yourself by logging in to myregistry.example.com. Remember to use \"johndoe\" as the username and \"mypassword\" as the password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Retrieve the repository, tag, and digest of the images in the system.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Retrieve the list of available images in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Give me a list of containers that are running but have an unhealthy health status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'"
  },
  {
    "input": "Show me the images that have the label \"maintainer=nginx\" and provide their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please list all containers that are currently running and were created after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Display the complete list of containers, regardless of their status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Find the images maintained by nginx and include their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me all containers, their names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Retrieve the IDs of Docker images. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Give me the repository, tag, and ID of all the images that were created before the latest nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Hello Docker! Could you please authenticate yourself on the registry at yetanotherregistry.example.net? Make sure to use the username \"marydoe\" and the password \"herpassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login yetanotherregistry.example.net --username=marydoe --password=herpassword\""
  },
  {
    "input": "Please show me the running containers having the network set to my-network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Let me know ASAP about the container you ran most recently.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Hey, stop that container named \"my_container\" immediately!",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM my_container\""
  },
  {
    "input": "Get rid of those annoying containers that have already stopped. ",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=exited)\""
  },
  {
    "input": "Show me the current status of the containers.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Give me the last 4 containers that were recently active. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "I need a list of running container IDs. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Can you please show me the available images after the nginx:alpine image?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f since=nginx:alpine"
  },
  {
    "input": "Retrieve the names and statuses of the running containers, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "List all containers running in the frontend network, filtering by running status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Quickly share the information of the last executed container.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Show me the running containers that are descendants of the Ubuntu image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Can you show me the containers that have a health status of healthy?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "List all the docker containers that have the ancestor as mongo and volumes set to /app.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "Provide me with a list of running containers that are listening on port 8080. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Which images have been built after the nginx:alpine image?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f since=nginx:alpine"
  },
  {
    "input": "Tell me the current status and sizes of all the running containers.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "List all containers with the volume as \"/data\" and the ancestor as \"postgres\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "Display the containers running with a creation time prior to 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "I want to see the complete details of all the images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "Stop the execution of all currently running containers promptly.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=running)\""
  },
  {
    "input": "Give me the Docker images that were created prior to the image with tag \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "Docker, show me all the Docker images, including the dangling ones, and make sure to display their repository, tags, and IDs.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please display a list of all Docker images, even the ones that are not active at the moment.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --all"
  },
  {
    "input": "Docker, can you show me the running containers? But please, only include the 'network=host' ones.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Fetch all the containers that have exited with status code 1.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Give me a list of containers that are currently running and belong to the frontend network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Display the containers that have exited before the one with the ID 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Please display the running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Display all running containers created after 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "Hey Docker, show me the containers that have a running status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "Give me a detailed overview of the nginx images, including the repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Make all the information of the images visible to me.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "I need the complete information of all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Show me all the containers, active or inactive. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Show me the running containers, Docker, but make sure to filter them with 'network=host'.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "List all the running containers with the ACME label from the vendor ACME.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Provide me with a list of running containers filtered by the ACME label from vendor ACME.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Present the Docker images before the image \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "Retrieve all the images in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Provide me with the repository, tag, and digest details of the images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "I need to see the containers that are not running anymore.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "I want to see a list of all containers, irrespective of whether they are currently running or stopped.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "List down all the containers that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Can you provide me with a list of all containers, including the stopped ones? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Fetch a list of all images' repository, tag, and ID excluding those created after the latest nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please show me the active containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Give me a list of containers that are running with Ubuntu as their ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Exhibit the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "List all containers along with their names, images, and current status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Could you show me all the images along with their repository, tag, and ID?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Terminate all the containers that have completed execution. ",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=exited)\""
  },
  {
    "input": "Please give me a list of containers that are running and exposing port 443.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=443'"
  },
  {
    "input": "Would you be so kind as to terminate any running my_image containers?",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q --filter status=running --filter ancestor=my_image)\""
  },
  {
    "input": "Show me the corresponding repository, tag, and ID of all the images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Run a container using the latest version of the Nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe --password-stdin \u003c ~/herpassword.txt\""
  },
  {
    "input": "List all the available images with their respective repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please display the running Docker containers filtered by creation since 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Why don't you display the names and images of all running containers?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'"
  },
  {
    "input": "Could you display the containers that have exited successfully?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'exited=0'"
  },
  {
    "input": "Find all containers where the volume is set to \"/data\" and the ancestor is \"postgres\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "Please display the Docker image IDs only. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "I need to see a list of images with their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display the containers that are not running and are based on Alpine.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Show me the available Docker images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Stop running myApp and my_container2, Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop myApp my_container2\""
  },
  {
    "input": "Show me a list of images' repository, tag, and ID, but only for those created before the latest nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me the last 4 containers that were recently active. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "Please list the repositories and tags of your images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Please provide me with a list of containers running with the ACME label from the vendor ACME.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Display the running containers that are currently running and listening on port 8080. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Retrieve all the containers having the ancestor set as mongo and volumes set to /app.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "List the names of running containers created before 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "Display the running Docker containers filtered by creation since 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Provide me with a list of all the available images in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Hey Docker, I need you to authenticate yourself on yetanotherregistry.example.net. Your username is \"marydoe\" and your password is \"herpassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login yetanotherregistry.example.net --username=marydoe --password=herpassword\""
  },
  {
    "input": "Display the images that are not being used by any running containers.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Docker, it's necessary for me to log in using the username \"marydoe\". Could you please facilitate the process?",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe\""
  },
  {
    "input": "Docker, list all the running containers with Debian as their ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "Please list down all the running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Show me the running containers that are exposing port 8080. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'publish=8080'"
  },
  {
    "input": "Give me a list of running containers that have port 8080 published. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Display the containers that are running and healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "Provide me with the nginx image listing.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "Give me a list of containers that have the port 80 exposed. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'expose=80'"
  },
  {
    "input": "Expose the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "List the Docker images that have a creation timestamp earlier than \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "Display only the containers that are running and have volumes mounted at \"/data\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Display all the running containers labeled with 'com.example.vendor' set as ACME from vendor ACME.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Login to the new registry using your username and password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login newregistry.example.org --username=marydoe --password-stdin \u003c ~/herpassword.txt\""
  },
  {
    "input": "What containers are currently active?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "List all containers based on the Ubuntu image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Provide me with the digests of all the Docker images. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Show me the running containers that have the Ubuntu image as their ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Create a new network called \"my_network\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe --password-stdin \u003c ~/herpassword.txt\""
  },
  {
    "input": "Show me the containers that have port 9090 published and are in a running state.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'"
  },
  {
    "input": "Display the containers filtered by the frontend-network and running status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "I want to see the current status and sizes of the containers that are running.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Could you give me the complete details of all Docker images, including the ones not in use?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --all"
  },
  {
    "input": "Display the IDs of the running containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Showcase the repository, tag, and ID for each image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Hey Docker, display the containers that have exited status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Docker, show me only the running containers that are using the 'network=host' filter, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Could you show me the running containers' IDs and images?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Give me a list of running containers with a creation time before 3e33ad9a0b8e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b8e'"
  },
  {
    "input": "Display the containers that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Display all the containers with exited status, Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Display the running containers that have port 443 exposed to me.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=443'"
  },
  {
    "input": "Inform me about the last container you executed as soon as possible.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Display all containers with a healthy health status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Please give me the information of the three most recent containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "Get a list of containers that exited before container with the ID 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "I need to see the repositories and tags used for your images, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Show me the Docker images that were created before the image with tag \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "Provide me with a list of running containers and their respective sizes.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Display the containers that are stopped.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Hey, Docker! Stop ginto using the SIGINT signal gracefully.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGINT ginto\""
  },
  {
    "input": "Display the repository names of the images that are not associated with any containers.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Give me the names and images of all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'"
  },
  {
    "input": "Can you list the images with dangling status?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f dangling=true"
  },
  {
    "input": "Give me the list of containers with volumes mounted at \"/data\" that are currently active.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Can you show me the last five running containers?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "Please provide me with the list of running containers that expose port 8080. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'publish=8080'"
  },
  {
    "input": "Show me all the containers running on port 9090.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'"
  },
  {
    "input": "Can you show me the repositories and tags of your images?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Docker, could you please stop all running container instances?",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q)\""
  },
  {
    "input": "List all available containers and their status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Give me a list of containers named \"my-container\", please. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "Hey, show me all the containers that have exited status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Could you provide me with the repositories and tags for your images, please?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Retrieve the list of all containers in running state on my-network network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Show me the information of the container run most recently, ASAP.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "\"Dear Docker, kindly log in to the new registry with the username Mary Doe.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login newregistry.example.org --username=marydoe\""
  },
  {
    "input": "To authenticate, use the command \"docker login anotherregistry.example.com\" and enter your username as \"johndoe\" and password as \"mypassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Take a moment to log in to anotherregistry.example.com using your login credentials.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Find all the running containers and filter them by volumes attached to \"/data\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Docker, I request you to log in to anotherregistry.example.com with the username \"johndoe\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe\""
  },
  {
    "input": "Docker, log in now to anotherregistry.example.com and use your username \"johndoe\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe\""
  },
  {
    "input": "List the containers that are currently running with port 9090 published.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'"
  },
  {
    "input": "Display all the running containers that have the ACME label from vendor ACME.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Display all the running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Display a table containing information about the images, including details like the repository, tag, ID, and size.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "Tell me the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Could you show me the containers called \"my-container\", please? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "List all the images in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "List all containers with their corresponding images, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Please provide the details of containers that have exited successfully.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'exited=0'"
  },
  {
    "input": "Show me the images with their associated digests. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Find all the containers that are running and have the Ubuntu image. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Please halt all active Docker containers.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q)\""
  },
  {
    "input": "Retrieve the list of containers that are currently running and have volumes connected to \"/data\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Give me the list of containers created before 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "Display containers filtered by the Ubuntu ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Display all Docker images, including the ones that are not active right now.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --all"
  },
  {
    "input": "Display all the available Docker images to me.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Show me the repository, tag, and digest for all the images in the system.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Please display the list of running containers along with their images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "List down the containers that have exited before 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Docker, can you please show me all the Docker images? This should include the ones that are dangling. Additionally, provide their repository, tags, and IDs.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please provide the current tasks running in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "List all the running containers labeled as ACME from the ACME vendor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "I would like to see the repositories and tags of your images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Give me the details of containers that have exited with a code of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'exited=0'"
  },
  {
    "input": "Show me a full list of all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Display the digests for all the available Docker images. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "List all the images that are dangling and their IDs.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Inform me about the container you recently executed without delay.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Give me a table displaying the repository, tag, ID, and size of the images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "Provide a list of running containers with an unhealthy health status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'"
  },
  {
    "input": "List all running containers with complete information.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "I want to see a list of all containers with their respective names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Give me the images listed with their corresponding repository, tag, and ID values.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me the exited containers that are using Alpine as their base image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Give me a list of running containers filtered by the Ubuntu ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Give a detailed overview of the images with their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Docker, kindly authenticate yourself on the registry yetanotherregistry.example.net using the login credentials of user \"marydoe\" and the corresponding password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login yetanotherregistry.example.net --username=marydoe --password=herpassword\""
  },
  {
    "input": "Show me the images in a table format with the repository, tag, ID, and size.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "Show me the images in a table format, including details such as the repository, tag, ID, and size.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "List all containers with the frontend-network filter and running status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Can you display the containers that have a health status of healthy?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "I need your username and password in order to log you into the system.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "List all containers that are running and in a healthy condition.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "Show me the containers that have exited and are using Alpine as their base.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Retrieve a list of all Docker images, including the dangling ones. Please provide their repository, tags, and IDs as well.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "I want to see a list of all containers along with their status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Give me the containers that have exited, but make sure to exclude the one with ID '3e33ad9a0b2e'.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Find the running containers that are marked as unhealthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'"
  },
  {
    "input": "I want to see all the containers running on the my-network network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "I need information about the last five running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "Hey, Docker, can you please authenticate me with my username \"marydoe\"?",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe\""
  },
  {
    "input": "Show me all the containers that have exited with status code 1.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Docker, terminate myAPP and thirdAPP in a graceful manner using the SIGINT signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGINT myAPP thirdAPP\""
  },
  {
    "input": "List the containers that are running and expose the port 80. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'expose=80'"
  },
  {
    "input": "Can you show me all running containers and their names and statuses?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Provide me with the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Docker, ensure that you are logged in to the container registry using the provided username and password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Show me the containers that have exited before container 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Can you please provide me with the repositories and tags of your images?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Docker, please list the running containers and apply the 'network=host' filter.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "List all the images with their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please stop the container called \"my_container\" now.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop my_container\""
  },
  {
    "input": "Please end the process of my_container.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill my_container\""
  },
  {
    "input": "Log in to Docker by providing your username and password to authenticate.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password=mypassword\""
  },
  {
    "input": "Show me the containers that have started after 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "Display the running containers and filter them based on volumes connected to the \"/data\" directory.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "I need to see the repositories and tags of your images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Show me the images in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Could you show me the containers that have a running status? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "Display all the Docker images to me.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Return a list of containers that have port 8080 published and are currently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Display the containers in the frontend network and filter them by running status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Fetch me the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Fetch the images that are not in use.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Get the details of the 4 containers that were recently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "Retrieve the containers that are healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Please show me the repositories and tags used for your images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Please provide me with the IDs of all containers, irrespective of their current state. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Show me the running Docker containers that were created after 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "I want to see all containers with their names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Present the running containers and include their names and statuses.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Display the information of your last executed container, now!",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "List all running containers and their corresponding names and images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'"
  },
  {
    "input": "List all containers that are currently running and listening on port 8080. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Display the repository, tag, and ID information for all the available images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Provide me with the repository, tag, and digest information of the images on the server.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Display the list of running containers and their respective images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "I want to see the names and images of all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'"
  },
  {
    "input": "List down the images along with their repository, tag, and digest.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Kindly consider logging in to myregistry.example.com with your username set as \"johndoe\" and the provided password being \"mypassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "List all the containers with label version 1.0 and status running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=version=1.0' --filter 'status=running'"
  },
  {
    "input": "Give me the current status of all containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Give me a list of running containers with port 9090 published.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'"
  },
  {
    "input": "Display the running containers that have Debian as their ancestor, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "Retrieve the containers that have exited successfully.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Hey Docker, I would like to see all the Docker images. This should include the ones that are dangling. Also, provide their repository, tags, and IDs.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Can you list down the images that are dangling?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f dangling=true"
  },
  {
    "input": "Please provide me with the details of containers that have exited and have a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "I request you to log in to myregistry.example.com with \"johndoe\" as your username and \"mypassword\" as your password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Please grant access to anotherregistry.example.com by logging in with your username \"johndoe\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe\""
  },
  {
    "input": "Give me just the Docker image IDs. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "List the images filtered by the label \"maintainer=nginx\" and provide their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Hey Docker, show me only the running containers that are using the 'network=host' filter.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Can you please log in to myregistry.example.com as \"johndoe\" with your password set as \"mypassword\"?",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "I want to see all the containers that are currently running and have the ACME label from the ACME vendor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "What are the running containers?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "I would like to see the details of the last 4 containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "Show me the names, images, and status of all containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Give me the list of running Docker containers that were started after 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Please provide me with the repositories and tags of your images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Retrieve containers that have the volume \"/data\" and are of the \"postgres\" image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "I would appreciate it if you could list the repositories and tags of your images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "List all containers that are running and have the Ubuntu image as their ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Fetch the containers that have the status running and the network as my-network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Can you fetch me the nginx images along with their repository, tag, and ID?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please show me the containers which are currently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "I need to know which containers are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "Give me an overview of running containers and their sizes.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Display a list of images' repository, tag, and ID, excluding those created after the latest nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Would you mind stopping my_container gracefully by sending the SIGINT signal?",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGINT my_container\""
  },
  {
    "input": "Please show me a table of images, including details such as the repository, tag, ID, and size.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "I want to see all the containers named \"my-container\", please. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "Docker, display the containers that have exited status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Make sure you are logged in to myregistry.example.com. The username is johndoe.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe\""
  },
  {
    "input": "Retrieve a list of all containers, showing their names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Present me with a comprehensive list of currently active containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Please display all the containers where the volume is \"/data\" and the image is \"postgres\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "Output the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Show me the containers with the status set as \"exited\" and the ancestor set as Alpine.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Retrieve all the containers that have the ancestor as mongo and volumes set to /app.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "Can you display the images that have been created since the nginx:alpine image?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f since=nginx:alpine"
  },
  {
    "input": "Give me the details of the containers currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Show me the details of the nginx images, such as the repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Obtain the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "List all containers that are currently running and have port 8080 published. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Please display the containers that are currently running after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Display all containers with their corresponding names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "List all the running containers that are publishing port 8080. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'publish=8080'"
  },
  {
    "input": "Show me the status of each and every container, including the stopped ones. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Please show the containers with exposed port 80. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'expose=80'"
  },
  {
    "input": "List all the running containers from vendor ACME.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "I want to see the comprehensive information about all Docker images, even the inactive ones.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --all"
  },
  {
    "input": "Show me the images that are dangling.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f dangling=true"
  },
  {
    "input": "List the images and their corresponding repository, tag, and digest.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Fetch the containers that have the status running and network=my-network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Display the details of the three latest containers, regardless of their status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "List all containers that have exited and are using the Alpine parent as their image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "I want to know the details of the last 4 containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "Tell me the names and images of all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'"
  },
  {
    "input": "Halt my_container1 and confusioner, Docker, right away!",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop my_container1 confusioner\""
  },
  {
    "input": "Show me the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Present the repositories and tags of your images, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Could you please display the running containers, but only those with the 'network=host' filter?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Give me a list of containers that have port 8080 published and are currently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Give me the IDs of the containers currently in running state. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Show me the containers with volumes connected to \"/data\" that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Show me the tasks currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Cease the operation of the container named \"my_container\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop my_container\""
  },
  {
    "input": "Show me a list of the running containers and filter them by volumes mounted at \"/data\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Show me all the running containers that expose the port 80. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'expose=80'"
  },
  {
    "input": "List all the images that are not in use by any containers.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me the active containers with volumes connected to \"/data\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Docker, I command you to kill all running containers!",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q)\""
  },
  {
    "input": "Please show me the list of running containers and their images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Show me the containers that are currently running and have port 8080 published. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Please log in to myregistry.example.com by providing your username as johndoe.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe\""
  },
  {
    "input": "Show me all the running containers that are derived from Debian, Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "Show me any containers that have been started since 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "I would like to see a list of containers that have the status running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "Display all the containers that exited before the container with ID 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Provide the details of the active containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "What containers are currently running? Include only the last five.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "Tell me the status and sizes of the running containers.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Get me the containers that are currently running with the ancestor Ubuntu. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "It would be really helpful if you could show me the repositories and tags of your images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Please show me the containers and their sizes.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "I want to see the nginx images in the repository.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "Give me the list of running Docker containers that started from 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Share the information of your last container run quickly.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Get me the list of containers that have exited and have a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Display all healthy containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "List all the containers, including the ones that are not currently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Display the current status and sizes of all the containers.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Retrieve the running Docker containers that started from 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "List all the nginx images in the store.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "Give me the details of containers that have exited and have a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Give me a list of the running containers since 4f66ad9a0b2e. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "List all containers that are running and have port 8080 published. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Present a list of all running containers with their respective images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "I need you to display the repositories and tags of your images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Display the complete information of currently running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Give me a list of all containers and their names, images, and current status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "List out all the Docker images, including the ones not currently active.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --all"
  },
  {
    "input": "List all active containers with complete information.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Show the list of nginx images in the store.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "Present me with the details of the most recently executed container, now!",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Provide me with the details of the containers that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "List the containers with a status of running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "Show me all containers running in the frontend network, filtering by their running statuses.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Can you provide the Docker image IDs only? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Show me a table that includes the repository, tag, ID, and size of the images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "Present the images with a created timestamp prior to \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "List the IDs, repository names, and tags for the dangling images.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me all the containers that have exited, filtering them by ID and excluding '3e33ad9a0b2e'.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Provide me with the repository, tag, and digest for all the images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Hey Docker, I'd like to see a list of running containers, but only the ones with the 'network=host' filter applied.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Give me a list of containers and their respective names, images, and current status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Fetch the images along with their repository, tag, and digest in the system.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "I need information about the first five running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "Terminate all currently running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=running)\""
  },
  {
    "input": "Please show me a list of dangling images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f dangling=true"
  },
  {
    "input": "Get me all the images in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Find all the containers that exited before container 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Can you show me the currently running containers?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Present the repository, tag, and ID for all images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "List all healthy containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Help me gather information about the confusioner images, including the repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images confusioner --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please display the full details of all Docker images, including the ones not currently being used.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --all"
  },
  {
    "input": "I would like to see the list of containers running on my-network network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Kindly terminate all existing Docker containers.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q)\""
  },
  {
    "input": "Fetch the containers that are currently running and have volumes attached to \"/data\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Display the digests for all the images available in Docker. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "I am looking for the images created since the nginx:alpine image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f since=nginx:alpine"
  },
  {
    "input": "Please show me the running containers after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Please provide me with a list of all the Docker images, including the ones that are dangling. Additionally, include their repository, tags, and IDs.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Retrieve the list of running containers that were created after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "I want to see the IDs of all the containers that are currently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Provide me with a list of running containers listening on port 8080. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Provide a list of running containers that have exposed port 80.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "Show me the containers that are named \"my-container\". ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "Stop all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q)\""
  },
  {
    "input": "Could you please log in using your username and password? It's important.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password=mypassword\""
  },
  {
    "input": "Display the running containers with port 80 exposed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "Show me all the Docker images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Please kill all the containers which have exited. ",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=exited)\""
  },
  {
    "input": "Could you show me the IDs of the containers that are currently running? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Give me all the container IDs, whether they are currently running or stopped. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Generate a list of all images' repository, tag, and ID for those created before the latest confusioner image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f \"before=confusioner:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me the containers that are running on the my-network network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Hi Docker, please log in to the registry at yetanotherregistry.example.net using the username \"marydoe\" and the password \"herpassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login yetanotherregistry.example.net --username=marydoe --password=herpassword\""
  },
  {
    "input": "Fetch me the containers that are running but have unhealthy health status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'"
  },
  {
    "input": "Please show me the list of tasks currently running in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Give me an overview of the current status and sizes of the containers that are running.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Docker, list all the running containers that are rooted from Debian.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "Fetch all the available Docker images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Display the IDs of all containers, regardless of their current state. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Docker, show me the containers in exited status, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "List the names of the first five running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "Give me the containers that are currently running and in a healthy condition.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "Can you please show me the images since the nginx:alpine image?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f since=nginx:alpine"
  },
  {
    "input": "Present the information of the container you ran last.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "\"Docker, it's time to log in to the new registry at newregistry.example.org. Please provide your username, Mary Doe.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login newregistry.example.org --username=marydoe\""
  },
  {
    "input": "Show me all the containers, be it running or stopped. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Can you please display the repositories and tags of your images?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Show me all the running containers that are exposing port 80.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "List all containers that were created before 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "Please present the IDs and images of all the running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "List all the containers, even the inactive ones. Give me the details of the first three.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "Hey Docker, please ensure that all the containers using my image are stopped.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q --filter ancestor=my_image)\""
  },
  {
    "input": "Show me the list of containers which have the ancestor set to mongo and volume set to /app.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "Docker, please kill all running containers immediately!",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q)\""
  },
  {
    "input": "I need to see the containers called \"my-container\", please. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "Show me the running containers labeled as ACME from vendor ACME.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Show me the list of running containers with a healthy status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "Give me a list of the dangling images and their tags.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me the containers running on my-network network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Tell me the current sizes of all the containers.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "List all containers running prior to 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "List all the containers with the status set as \"exited\" and the ancestor image set as Alpine.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Retrieve the list of running containers that have the ACME label from the ACME vendor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Let me know about the last container you executed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "I need to see the details of your last container run.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Docker, show me the running containers and filter them. I want only the ones with 'network=host'.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Display running containers that have the Ubuntu image as their ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Please show me the names and images of all containers that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'"
  },
  {
    "input": "Show me all the containers with the name \"my-container\". ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "Docker, please provide me access by logging me in with the username \"marydoe\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe\""
  },
  {
    "input": "Display a list of containers with the name \"my-container\", please. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "Could you show me the names and images of all running containers?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'"
  },
  {
    "input": "Retrieve just the Docker image IDs. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Show me all running containers in the frontend network and their statuses.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Provide me with the IDs and images of all the containers running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Retrieve the images and IDs of all the containers that are running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Show running containers, including their names and statuses.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "\"You can't proceed without logging in, Docker. Use johndoe as your username.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe\""
  },
  {
    "input": "Provide me with the details of nginx images, such as the repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Can you show me the containers that are no longer running?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Docker, would you mind stopping my_container1 and my_container2?",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop my_container1 my_container2\""
  },
  {
    "input": "Could you show me the IDs and images of all running containers?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "List all the images with their corresponding repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Make the list of images available in full, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "Show me the exited containers with the parent image set as Alpine.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Unveil the repository, tag, and ID for each image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Hey Docker, make sure you stop the container named \"my_container\" using the SIGTERM signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM my_container\""
  },
  {
    "input": "I need a list of containers that have stopped running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Display the containers that have exited before the one with ID 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Please display the containers that are currently healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Find all the running containers and present their names and statuses.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Provide me with the digests of all the images in Docker. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Display all the images along with their corresponding digests. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Retrieve the images along with their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "I need to see the running containers that have port 8080 published. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'publish=8080'"
  },
  {
    "input": "Show all the containers with the status running on the my-network network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Can you display the IDs of the containers that are currently running? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Get me the nginx image listing.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "Show me all containers that are in a healthy state.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Display all running containers created since 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "List only the running containers with volumes mounted at \"/data\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Please provide the running containers that were created before 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "Show me the running containers that are published on port 8080. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Make the complete details of the images visible to me.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "Give me a list showing all containers and their respective names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Help me gather information about the nginx images, including the repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me a list of containers that are running and have port 443 exposed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=443'"
  },
  {
    "input": "Please find all the containers having the ancestor set as mongo and volumes set to /app.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "Could you fetch the names and statuses of the running containers, please?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Display the containers that are not running and have Alpine as their ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Can you display the running tasks in Docker?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Show running containers that are exposing port 80.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "Give me a list of the running containers with the ancestor Ubuntu. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Retrieve information about containers that have exited and have a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Give me a list of running containers filtered by creation since 4f66ad9a0b2e. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Give me the containers that exited prior to the container with the ID 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Kindly stop all the currently active containers in a graceful way within 5 seconds, Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 5 $(docker ps -q --filter status=running)\""
  },
  {
    "input": "Please give me a list of containers that are currently healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Give me a list of all Docker images, including those that are not being used.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --all"
  },
  {
    "input": "Show running containers filtered by the Ubuntu ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Can you show me all the running containers and their names and statuses?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "List all the stopped containers for me.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Show me all the images that were created before the latest nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Docker, I'm requesting you to log me in as Johndoe.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe\""
  },
  {
    "input": "Display the current status and sizes of all the containers that are running.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Show me all the running containers that have Debian as their base image, Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "Give me the containers that are running and marked as unhealthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'"
  },
  {
    "input": "Show me the running containers filtered with the Ubuntu ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Please show me the last 4 containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "Can you display the dangling images for me?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f dangling=true"
  },
  {
    "input": "Hey Docker, log in using your username and password. We need to proceed further.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password=mypassword\""
  },
  {
    "input": "\"Please ensure that you are logged in to myregistry.example.com with the username 'johndoe'.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe\""
  },
  {
    "input": "List down all the running Docker containers starting from 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Get me the last 4 containers that were recently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "Give me a list of running containers created after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Fetch the information of all the images including their respective repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Stop the container named \"my_container\" immediately.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop my_container\""
  },
  {
    "input": "List all images that have dangling status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f dangling=true"
  },
  {
    "input": "Please provide me with a breakdown of the running containers and their sizes.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Please display the containers and their status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Show me the images without omitting any details.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "Please list all the containers running with the label from ACME vendor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Show me the complete list of images without abbreviating any information.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "List all running containers created later than 3e33ad9a0b3e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b3e'"
  },
  {
    "input": "Show me the list of dangling images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f dangling=true"
  },
  {
    "input": "Cease the operation of all containers currently running in Docker, please.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q)\""
  },
  {
    "input": "Display all containers and their respective names, images, and current status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Give me a list displaying all containers and their corresponding names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "List all containers with the volume \"/data\" and the ancestor \"postgres\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "Get the digests of all the images in Docker. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "I want you to list all the images and organize them in a table showing the repository, tag, ID, and size.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "List down the nginx images that are present.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "Docker, kindly log in to anotherregistry.example.com with the provided credentials: username \"johndoe\" and password \"mypassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Display the running containers, please. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "Display the containers that are not running and have Alpine as their ancestor image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Show me the details of the three last containers, regardless of their status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "Stop my_container without any delay.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 0 my_container\""
  },
  {
    "input": "Just tell me what container you last ran.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Can you display the running tasks in Docker, please?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Return the names of the containers that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "Give me the containers that have exited and are using Alpine as the ancestor image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Show me all the containers running in the frontend-network with their current status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Get the images with the label \"maintainer=nginx\" and provide their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display all the containers that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "List all containers that are currently running, including their names and images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'"
  },
  {
    "input": "Can you please list the repositories and tags used for your images?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "I need to see the containers that have exited before container 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Show the containers that exited before the container 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Please show the containers that are currently running and were created after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Show me the information of the last 4 containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "Find all containers where the volume is set as \"/data\" and the ancestor is set as \"postgres\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "Display the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Give me a list of all currently running containers after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Show me the stopped containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Give me a list of the containers currently running and having the ancestor Ubuntu. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Tell me which containers are currently running.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Give me a list of containers that are running and exposing port 80.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "Show me a list of images' repository, tag, and ID for those created before the latest nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display the containers that have port 9090 published and are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'"
  },
  {
    "input": "I want to see the containers that have exited with a status code of 1.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Retrieve the details of images that have the label \"maintainer=nginx,\" including their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Could you provide me with the containers that have a running status? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "Show the repository, tag, and ID for each nginx image available.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Get me the images stored in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Cease the execution of confusioner.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill confusioner\""
  },
  {
    "input": "List all the running containers with port 8080 exposed. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'publish=8080'"
  },
  {
    "input": "Please show me the containers with the name \"my-container\". ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "Give me the containers that are running and are in a healthy state.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "Please provide the containers that are running and exposing port 80. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'expose=80'"
  },
  {
    "input": "Display all the containers with the ancestor set as mongo and volume set to /app.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "Hey Docker, can you please display the containers that have exited status?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Show me the containers that have stopped running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Please get me the containers that have exited, filtering them by their ID and excluding '3e33ad9a0b2e'.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "List all the containers with the status set as exited and using Alpine as the ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Get me the details of all current containers without truncating.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Open up the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "List all the running containers along with their sizes.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Display a complete list of all containers, including those that are currently running or stopped. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Halt all running containers that have been created from my_image.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q --filter status=running --filter ancestor=my_image)\""
  },
  {
    "input": "List all Docker images, including those that are not being used right now.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --all"
  },
  {
    "input": "Please provide me with the names and statuses of all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Please give me the list of containers that are running and have network=my-network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Get me the images in a table format and include their repository, tag, ID, and size.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "Could you please display the repositories and tags of your images?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Give me all the container IDs, regardless of their status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Docker, please display the containers with exited status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Give me the containers that have exited and are using Alpine as the parent.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Display the containers, including their names, images, and current status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Provide me with a list of containers that are running right now and have port 443 exposed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=443'"
  },
  {
    "input": "Fetch all images with the \"maintainer=nginx\" label and display their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display the repository names, tags, and IDs of the images that are not being used by any containers.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please show me the Docker containers that have exited and are related to the mongo image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=mongo'"
  },
  {
    "input": "Fetch the IDs of Docker images. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Give me the details of containers that have exited and are based on Alpine.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Please display the IDs and images of all the running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Please log in to the container registry using the provided username and password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Can you display the containers that are currently running?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Display the running containers that are marked as healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "Get the status of containers created after 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "List all containers with volumes matching \"/data\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Can you help me find the containers that are currently running and were created after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Docker, fetch the running containers which are descendants of Debian.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "Give me the list of running containers created before 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "I need a list of running containers that expose port 8080. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'publish=8080'"
  },
  {
    "input": "Fetch the details of any containers started since 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "Don't leave out any details while showing the images to me.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "Show me all the running containers and filter them based on volumes connected to \"/data\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Docker, send a SIGHUP signal to my_container and bring it to a halt.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGHUP my_container\""
  },
  {
    "input": "Show me the names of running containers created before 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "List just the Docker image IDs. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "I request you to provide me with the complete list of images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "Display the dangling images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f dangling=true"
  },
  {
    "input": "Pull the latest version of the Redis image.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe --password-stdin \u003c ~/herpassword.txt\""
  },
  {
    "input": "I want to see the IDs of Docker images. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Please terminate reverseProxyGinto in a graceful manner using SIGHUP signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGHUP reverseProxyGinto\""
  },
  {
    "input": "Get me the running containers filtered by volumes mounted at \"/data\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Display all containers, both running and stopped. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Give me the list of containers that exited and have a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Find all the containers that are currently running and having the ancestor Ubuntu. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Show me all the available images, including the ones not currently in use.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --all"
  },
  {
    "input": "List all running containers with their respective images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Terminate all containers currently running in Docker, ASAP!",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q)\""
  },
  {
    "input": "Please show the details of containers that have exited successfully.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'exited=0'"
  },
  {
    "input": "Get the list of images and display their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Could you provide me with a list of all Docker images, including the ones that are not being used?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --all"
  },
  {
    "input": "List all the containers running on my-network network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Stop my_container1 and my_container2, Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop my_container1 my_container2\""
  },
  {
    "input": "I would like to see a list of running containers and their corresponding images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "\"Mary, please log into the new registry on newregistry.example.org using your username.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login newregistry.example.org --username=marydoe\""
  },
  {
    "input": "Provide me with a list of all Docker images, including the ones not in use currently.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --all"
  },
  {
    "input": "Please list all containers that have exited, filtering them by their ID and excluding '3e33ad9a0b2e'.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Retrieve the list of Docker containers that have an exited status and use the nginx image as their ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=nginx'"
  },
  {
    "input": "Retrieve all the containers that have the ancestor set as mongo and volumes set to /app.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "List the containers that are currently running and expose port 80.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "Get the images that have the label \"maintainer=nginx\" and show their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "List the details of the last five running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "List all the containers that have exited before the container with ID 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Show me the list of containers which have the ancestor as mongo and volume set to /app.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "Show me the repository, tag, and ID of images labeled with \"maintainer=nginx.\"",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display all containers, showing their names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Give me a list of containers that are running and have port 443 exposed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=443'"
  },
  {
    "input": "I would like to see the last 4 containers that were active. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "Retrieve containers that have the volume set as \"/data\" and are based on the \"postgres\" image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "I want to see the containers with a health status of healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Give me a list of all containers and their names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Retrieve the containers that are in a stopped state.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Hey Docker, can you list all the containers that have exited status?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Hey Docker, show me all the containers that are in exited status, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Give me the complete list of images without omission.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "Please show me the last 4 containers that were active. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "List all the running Docker containers that were started after 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "I want to see a complete list of containers and their status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Hey, Docker, could you please give me a list of all available images, including the dangling ones? Also, provide their repository, tags, and IDs.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Retrieve only the Docker image IDs for me. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Show running containers with port 80 exposed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "Please provide me with the list of running containers and their images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Hey Docker, make sure you log in to myregistry.example.com with the username \"johndoe\" and the password \"mypassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "List all the available images with their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display the repository, tag, and ID information for all images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "I would like to see a list of all the images including their corresponding repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Put a stop to any containers that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q --filter status=running)\""
  },
  {
    "input": "List all the containers that are running and expose the port 80.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'expose=80'"
  },
  {
    "input": "Display the names and statuses of all running containers for me.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Retrieve the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Display the containers that have the ancestor as mongo and volumes set to /app.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "List all the running containers in the frontend network and their respective statuses.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Retrieve all running containers' IDs and images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Give me the containers that are running and considered healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "It would be great if you could authenticate yourself on anotherregistry.example.com. Use your username as \"johndoe\" and password as \"mypassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "List all the containers that have exited with a status code of 1.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Display the tasks that are currently running in Docker, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Display all the images along with their corresponding repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Docker, I request you to shut down my_container with the SIGINT signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGINT my_container\""
  },
  {
    "input": "Give me the details of containers that have exited and are using the Alpine image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Please provide me with a list of containers and their respective status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Retrieve the list of running containers that have the 'com.example.vendor' set as ACME and are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Terminate my_container gracefully in 10 seconds.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 10 my_container\""
  },
  {
    "input": "Show me the containers with exited status, please Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Provide me with a list of images and their corresponding repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "I want to see the stopped containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Give a detailed list of the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Give me a list of all containers in the frontend network that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Display the repositories and tags used for your images, if you may.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "List down the containers that have exited before container with ID 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "What images have been generated since the nginx:alpine image?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f since=nginx:alpine"
  },
  {
    "input": "List all containers that have the Ubuntu image as their ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Give me the details of your most recent container execution without delay.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Retrieve the list of running containers with Debian as their ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "List the repository names, tags, and IDs for the images that are not being used.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please show me all the containers, irrespective of their status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Display the list of containers that are currently running and exposing port 443.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=443'"
  },
  {
    "input": "Show the repository, tag, and digest for the images in the system.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "I want to know the names and statuses of all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Docker, display the running containers that have Debian as their ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "Give me a list of running containers filtered by the ACME label from vendor ACME.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Do me a favor and authenticate yourself by logging into my registry using \"johndoe\" as your username and \"mypassword\" as your password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Display the containers currently running with the ancestor Ubuntu. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Please show me the containers that have exited status, Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "List down the images which are dangling.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f dangling=true"
  },
  {
    "input": "I need only a list of the Docker image IDs. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Display the containers that are not running and are based on the Alpine image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Docker, I command you to kill the container named \"my_container\" promptly using the SIGTERM signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM my_container\""
  },
  {
    "input": "Could you display all the images along with their corresponding repository, tag, and ID?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Can you please show me the containers having the ancestor set as mongo and volumes set to /app?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "List all containers with the volume set to \"/data\" and the ancestor set as \"postgres\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "Display the details of the most recent container execution now!",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Provide a list of containers that expose port 80 and are running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "Present the Docker images that were created earlier than \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "I want to see all Docker images, including the ones that are not currently in use.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --all"
  },
  {
    "input": "List down the repository, tag, and ID of the images that were created before the latest nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Inform me about the last container run instantly.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Show me the containers running on the my-network network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Show me the repository, tag, and ID of all the images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Halt all the containers that are currently operating in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q --filter status=running)\""
  },
  {
    "input": "Can you display the IDs of the running containers? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "List all the containers that are currently running on the my-network network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "List only the IDs of the containers that are running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Let me know the list of containers that have exited successfully and have a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "List the Docker containers with an ancestor of nginx and an exited status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=nginx'"
  },
  {
    "input": "Please provide a list of tasks that are currently running in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Can you please list the repositories and tags of your images?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "I urge you to put an end to all running my_image containers.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q --filter status=running --filter ancestor=my_image)\""
  },
  {
    "input": "List all containers with the status set as exited and using Alpine as the base image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Display the containers running in the frontend network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Make the complete list of images with their details visible to me.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "\"I need you to log in to myregistry.example.com. Use 'johndoe' as your username.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe\""
  },
  {
    "input": "Get the list of containers that have exited before the container with ID 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Get me the last 4 containers that were running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "Please give me the list of Docker containers that have exited and are based on nginx.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=nginx'"
  },
  {
    "input": "Can you list the Docker image IDs? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Docker, I need you to kill my_container gracefully with a SIGHUP signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGHUP my_container\""
  },
  {
    "input": "Show me the containers that are currently in a healthy condition.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Get me the repository, tag, and digest for the images on the server.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Can you please present the repositories and tags associated with your images?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Docker, please put an end to my_container1 and my_container2.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop my_container1 my_container2\""
  },
  {
    "input": "Hey Docker, list the containers that are running and have the 'network=host' filter applied.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Provide a table of images, including details like the repository, tag, ID, and size.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "Give me a list of Docker image IDs. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Halt the operation of all Docker containers, please.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q)\""
  },
  {
    "input": "Docker, please show me the running containers, but filter them by 'network=host'.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Find all the containers that are running and have volumes linked to the \"/data\" directory.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Give me the running containers created before 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "Fetch the running containers filtered by volumes attached to \"/data\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Retrieve only the Docker image IDs. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Could you please show me the IDs of the running containers? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "List all running containers and include their names and images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'"
  },
  {
    "input": "Give me a list of containers that are running and exposing port 443.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=443'"
  },
  {
    "input": "List all running containers created after 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "Show the logs of the container \"my_container\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe --password-stdin \u003c ~/herpassword.txt\""
  },
  {
    "input": "What are the images that have been generated since the nginx:alpine image?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f since=nginx:alpine"
  },
  {
    "input": "Retrieve all the containers that are currently running and having the ancestor Ubuntu. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "List all the running containers with the ancestor Ubuntu. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Show me the containers that have exited successfully.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'exited=0'"
  },
  {
    "input": "Show me all the containers that expose port 80 and are running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "Display the running containers that are listening on port 8080. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "It would be great if you could terminate my_container by sending the SIGINT signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGINT my_container\""
  },
  {
    "input": "I want to know which containers are currently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "Please display all the images along with their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Provide me the list of images, including the repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me the Docker containers that have an exited status and are descended from the nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=nginx'"
  },
  {
    "input": "Display running containers that are descendants of the Ubuntu image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Please list the containers that were created before 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "Please provide me with the IDs of all containers, regardless of their current state. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Find all containers that are running and were created after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "List down the images' repository, tag, and ID for the ones created before the latest nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me the Docker containers that have exited and have nginx as their ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=nginx'"
  },
  {
    "input": "Provide the list of currently active containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Display the repository, tag, and ID for each available nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display all the running containers in the frontend network and their statuses.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Please show me all the Docker images, including the ones that are dangling. I also need their repository, tags, and IDs to be displayed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Give me a list of all the images and their digests. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Terminate the container with the name \"my_container\" instantly.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop my_container\""
  },
  {
    "input": "I need to see all the containers that are marked as healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Show me the dangling images, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f dangling=true"
  },
  {
    "input": "Give me a list of all the Docker images with their digests. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Show me all the containers, whether running or stopped. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "What are the currently active containers?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Show me the information of the container you ran lastly.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Give me a list of all Docker images, including those that are not being used currently.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --all"
  },
  {
    "input": "Display the images that are dangling along with their respective repository names.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Fetch the images and provide their repository, tag, and ID information.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Retrieve the nginx images along with their relevant details.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "I want to see the images created after the nginx:alpine image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f since=nginx:alpine"
  },
  {
    "input": "Can you show me the running containers created after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Give me the containers that are currently running and have been created after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Fetch me the details of the three latest containers, regardless of their status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "Please log me in to yetanotherregistry.example.net with the username \"marydoe\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login yetanotherregistry.example.net --username=marydoe\""
  },
  {
    "input": "Shut down all running containers gracefully.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q --filter status=running)\""
  },
  {
    "input": "Give me the repository, tag, and digest for all the images on the server.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Display the Docker images created before \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "Show me just the Docker image IDs, please. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Show me the containers that are currently running and their respective sizes.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Display the running containers that have port 8080 published. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Give me the details of the nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "List the containers that are actively running and have port 9090 published.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'"
  },
  {
    "input": "Give me the list of containers with /app as volume and mongo as ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "List all running Docker containers.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe --password-stdin \u003c ~/herpassword.txt\""
  },
  {
    "input": "Display the running containers that have been launched after 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "Show me a list of running containers with the label 'com.example.vendor' set as ACME from the vendor ACME.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Get the containers that terminated before the one with ID 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "List all images with the label \"maintainer=nginx\" and display their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Docker, please authenticate on anotherregistry.example.com using the given username \"johndoe\" and password \"mypassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Provide me with a list of containers that are running on port 8080. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Stop my_container immediately.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill my_container\""
  },
  {
    "input": "Provide a list of images maintained by nginx and their respective repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Retrieve all the containers that are currently running with the Ubuntu image. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Find all containers where the volume is set to \"/data\" and the ancestor is set to \"postgres\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "Don't forget to login to the new registry using your username and password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login newregistry.example.org --username=marydoe --password=herpassword\""
  },
  {
    "input": "Please display the list of running containers and their images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Please log in to myregistry.example.com using the username johndoe and password from the file ~/mypassword.txt.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Please provide me with the Docker images before \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "List all containers that are listening on port 8080 and currently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Please list the watchbot images' repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images watchbot --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Find the containers that are not running anymore.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Please display the containers that have stopped running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Could you kindly kill my_container and deliver a SIGHUP signal?",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGHUP my_container\""
  },
  {
    "input": "Show me all the active containers with volumes connected to the \"/data\" path.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Docker, stop the container \"my_container\" promptly.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop my_container\""
  },
  {
    "input": "List all containers running with the Ubuntu ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Get me the repository, tag, and digest for the available images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Show me the containers that have exited and are using the Alpine as the base.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Retrieve the running containers with the ancestor Ubuntu. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Display all containers that were running prior to 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "Provide me with a list of nginx images, their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Docker, I need you to log in using your username and password, please.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password=mypassword\""
  },
  {
    "input": "Fetch all images maintained by nginx and provide details of their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "I'm interested in the names and statuses of all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Get me the list of all containers running the ancestor Ubuntu. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Display the detailed information of the image \"my_image\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe --password-stdin \u003c ~/herpassword.txt\""
  },
  {
    "input": "Display the containers that are currently running and have port 80 exposed. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'expose=80'"
  },
  {
    "input": "Hey Docker, could you display the running containers, but only the ones with the 'network=host' filter?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "I need to know which containers are currently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "\"Docker, I need you to log in to the new registry with the username Mary Doe so we can continue.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login newregistry.example.org --username=marydoe\""
  },
  {
    "input": "Show me the containers that are currently running with the ancestor Ubuntu. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Docker, I need you to log in as soon as possible. Use your username and password for authentication purposes.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password=mypassword\""
  },
  {
    "input": "Please show me the nginx images' repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Give me the status of the containers that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Display the tasks that are running in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Provide me with a list of running containers that have port 8080 published and are currently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Share the details of the container you ran last.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Give me the containers that are no longer running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "List all the images that are not currently being used.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "List the available nginx images with their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Present the images and their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Docker, could you kindly log in to anotherregistry.example.com using the username \"johndoe\"?",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe\""
  },
  {
    "input": "Inform about the containers that have exited with a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Please list all the containers and their respective status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Please display the containers that are currently running and have been created after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Get the images labeled with \"maintainer=nginx\" and show their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "List all the available images with their complete details.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "Display the detailed list of currently active containers without truncation.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "What containers are currently running?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Can you please inspect the repositories and tags of your images?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "I need to see all the containers that are running and have the Ubuntu image. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Show me all running containers filtered by the frontend network and running status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Hey Docker, show me the containers in exited status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "List all the tasks running in Docker, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "\"I need you to log in Docker, and your username is johndoe.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe\""
  },
  {
    "input": "Provide me with the details of the last container you executed immediately.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Give me a list of all the images and their corresponding digests. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Hey there, Docker! How about showing me the running containers with the 'network=host' filter?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Could you please stop my container?",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 0 my_container\""
  },
  {
    "input": "List the details of the first five running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "Please provide a list of currently running containers after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Display all containers that are running in the frontend network with their statuses.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Please provide your username as johndoe to log in to myregistry.example.com.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe\""
  },
  {
    "input": "Stop myApp with no delay.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 0 myApp\""
  },
  {
    "input": "List all containers in the frontend network with their respective running statuses.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "\"Hey, log in to myregistry.example.com right now. Use 'johndoe' as your username.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe\""
  },
  {
    "input": "Fetch all the containers that are currently active and have volumes linked to \"/data\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "I need the repository, tag, and digest of the images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Please list the repository, tag, and ID of the nginx images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display the containers that have been running before 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "Give me a list of containers in the frontend network and their running statuses.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Kindly cease my_container within 10 seconds.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 10 my_container\""
  },
  {
    "input": "Present the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Show me the IDs of all Docker images. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Hey Docker, can you display the containers with a running status? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "Please show me all the containers, no matter if they are running or stopped. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Give me the list of running containers along with their images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Please display the containers that have a health status of healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Please display the containers with exited status, Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "I want to view the information of the last 4 containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "Hey Docker, can you show me the containers that have exited status?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Find the repository, tag, and ID of the images that were created before the latest nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "I want to know the last 4 containers that were recently active. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "Display the running containers that are exposing port 80.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "Can you please show me the running Docker containers that were created since 4f66ad9a0b2e?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Can you please show me the containers that have the ancestor as mongo and volumes set to /app?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "I want to see all the containers named \"my-container\". ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "Can you show me the containers that have stopped running?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Provide a list of images since the nginx:alpine image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f since=nginx:alpine"
  },
  {
    "input": "Retrieve the digests of all the Docker images. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Don't skip any details while displaying the images to me.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "Show me the containers that are in exited status, Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Show me the images and their repository, tag, and ID information.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display the running containers and their respective sizes.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Docker, kindly halt all the currently active containers in a smooth manner within 5 seconds.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 5 $(docker ps -q --filter status=running)\""
  },
  {
    "input": "Display the complete list of images without any truncation.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "List the IDs of all the running containers, please. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Generate a table displaying the repository, tag, ID, and size of the images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "Give me a list of containers that are running right now and exposing port 443.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=443'"
  },
  {
    "input": "Retrieve the list of containers that exited before the container having the ID 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Hey there, Docker! I'd like to see the running containers, but only those with the 'network=host' filter.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Docker, use the credentials from ~/mypassword.txt to log in as user \"johndoe\" on myregistry.example.com.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Please show me the information of the three most recent containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "Give me the details of containers that exited with an exit status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Find all the containers named \"my-container\". ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "Retrieve the running containers labeled as ACME from the ACME vendor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "List all containers that are running and were created after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Please halt all the currently active containers gracefully within 5 seconds, Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 5 $(docker ps -q --filter status=running)\""
  },
  {
    "input": "Show me the containers and their status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "List the dangling images along with their repository names.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Get the images listed with their repository, tag, and ID details.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Let me know the complete details of all the available images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "Can you please display the dangling images?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f dangling=true"
  },
  {
    "input": "Please show the details of containers that have exited with a code of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'exited=0'"
  },
  {
    "input": "Retrieve the containers named \"my-container\", please. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "Display the available nginx images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "Docker, please stop my_container1 and my_container2 as soon as possible.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop my_container1 my_container2\""
  },
  {
    "input": "Give me a list of all containers with their respective names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Show me the list of containers that have exited, excluding the one with ID '3e33ad9a0b2e'.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=3e33ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "I need to see a list of all Docker images, including the dangling ones. Also, I want their repository, tags, and IDs to be displayed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display the images and their respective repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display the containers that are currently running and have port 8080 published. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Give me the list of containers which have the ancestor as mongo and volume set to /app.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "Ensure that all the information of the images is displayed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "Show all the containers that have stopped running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Hey Docker, log in to the registry yetanotherregistry.example.net using the login details of user \"marydoe\" and her corresponding password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login yetanotherregistry.example.net --username=marydoe --password=herpassword\""
  },
  {
    "input": "Please show me the tasks that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "List all the containers currently running and having the ancestor Ubuntu. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Give me information about the containers that have exited without any errors.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'exited=0'"
  },
  {
    "input": "Display running containers filtered with the Ubuntu ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Get the repository, tag, and digest for each image in the system.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Fetch the information of all the images including their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display all the images along with their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display the repository, tag, and ID of images that are maintained by nginx.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Hey Docker, list all the containers with exited status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Display the information of your latest running container.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Show me the exited containers with Alpine as their base image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Display only the IDs of the running containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Display the details of the three last containers, whether active or inactive.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "Please kill my_container1 and my_container2 with a SIGINT signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGINT my_container1 my_container2\""
  },
  {
    "input": "List all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Can you provide only the Docker image IDs? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Docker, I request you to put an end to all currently active containers.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q)\""
  },
  {
    "input": "Give me a list of containers that are currently running and listening on port 8080. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Retrieve the repository, tag, and digest of the images on the server.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Display all the containers running the ancestor Ubuntu. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Display the containers currently running and having the ancestor Ubuntu. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "List all the Docker images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Show off the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Display all the running containers filtered by network=my-network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Show me the container you ran recently.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Show me the details of the most recently run container.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Docker, please show me the running containers with the 'network=host' filter applied.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "List all containers with the Ubuntu image as their ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Show me the digests of all the available images. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Give me the containers running on the my-network network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "List all containers, their names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Show me the names, images, and current status of all containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Please provide me with the unique identifiers of all containers, irrespective of their current state. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Show the Docker images that have a creation date earlier than \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "Hey Docker, stop my_container in 10 seconds.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 10 my_container\""
  },
  {
    "input": "Can you show me the tasks that are currently running in Docker?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Please provide me with all the Docker images, including the ones that are dangling. Make sure to also include their repository, tags, and IDs.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please show me the containers that have the ancestor as mongo and volumes set to /app.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "Display the containers which are running and healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "Hey Docker, send a SIGHUP signal to my_container and make it exit gracefully.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGHUP my_container\""
  },
  {
    "input": "Ensure that you are logged in to myregistry.example.com. Use the username johndoe.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe\""
  },
  {
    "input": "Show me the IDs of all containers, regardless of their status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "I want to see the containers that are healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Retrieve the images and their corresponding repository, tag, and digest on the server.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Display containers that have exited with a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Display the active containers that are publishing port 8080. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'publish=8080'"
  },
  {
    "input": "Display all the images along with their digests. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "I need the information of nginx images, including their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Give me the list of all containers that are running and were created after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "It would be great if you could show me the repositories and tags of your images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Display the containers that have port 8080 published and are currently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "I'm waiting, provide me with the information about the last executed container right away.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Please display the images in a table format, including the repository, tag, ID, and size.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "Give me the IDs of the containers that are currently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Display a table containing information about the images, including the repository, tag, ID, and size.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "List the images that have been created after the nginx:alpine image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f since=nginx:alpine"
  },
  {
    "input": "List the Docker tasks that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Can you list all the repositories and tags of your images for me, please?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Show me the containers that have a health status of healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Display the status of all containers, both running and stopped. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Show all containers along with their names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Could you show me the repositories and tags used for your images?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Display the images that are not associated with any running containers.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me the containers with the volume \"/data\" and the ancestor \"postgres\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "Show me the repository names, tags, and IDs of the images that are not in use.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Retrieve the details of the 4 most recent containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "Show me the containers that exited with a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "I want to see the names, images, and status of all containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Retrieve the list of all Docker images, regardless of whether they are dangling or not. Also, provide their repository, tags, and IDs.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display for me the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Please, return the details of the first five running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "Fetch a list of all images' repository, tag, and ID, excluding the ones created after the latest nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display the list of currently running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Fetch the images along with their repository, tag, and digest on the server.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Please provide me with a list of images created after the nginx:alpine image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f since=nginx:alpine"
  },
  {
    "input": "Display a list of all Docker images, including the dangling ones. Please provide their repository, tags, and IDs as well.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Docker, can you display the containers with exited status?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Hey there, I need you to carefully stop all the active containers within 5 seconds, Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 5 $(docker ps -q --filter status=running)\""
  },
  {
    "input": "Docker, show me the running containers, but only those that are using the 'network=host' filter.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "List only the container IDs for running containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Please kill my_container1 and my_container2, ensuring a graceful termination with the SIGINT signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGINT my_container1 my_container2\""
  },
  {
    "input": "Docker, could you kindly cease the containers using my image?",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q --filter ancestor=my_image)\""
  },
  {
    "input": "Fetch the images with the label \"maintainer=nginx\" and display their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me all running containers in the frontend network along with their respective statuses.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Retrieve the containers that are marked as healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "I'm interested in knowing the names and images of all containers that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'"
  },
  {
    "input": "Display all the Docker images, regardless of whether they are dangling or not, and provide their repository, tags, and IDs.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "List all containers running with the Ubuntu image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Only show me the containers that are healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "I want to see the images along with their associated digests. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Hey, log in to myregistry.example.com using your username and password from ~/mypassword.txt.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "\"Dear Docker, kindly log in to myregistry.example.com with the username 'johndoe'.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe\""
  },
  {
    "input": "Give me a list of the running containers that were created after 4f66ad9a0b2e. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Retrieve the running tasks in Docker, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Provide me with a list of dangling images, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f dangling=true"
  },
  {
    "input": "Please show me the running containers on the my-network network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Give me the containers that started since 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "List the containers with port 9090 published and currently active.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'"
  },
  {
    "input": "Quickly stop all Docker containers, no questions asked!",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q)\""
  },
  {
    "input": "Please show me the names and images of all currently running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'"
  },
  {
    "input": "Provide me with a list of containers currently running with the label from the vendor ACME.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Please display the running Docker containers created since 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Find all the containers named \"my-container\" for me. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "Show me the images generated since the nginx:alpine image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f since=nginx:alpine"
  },
  {
    "input": "Show me the containers that exited successfully and have a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Display the running containers with port 443 exposed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=443'"
  },
  {
    "input": "Give me an overview of all containers and their status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "I need to see all containers that are running and exposing port 443.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=443'"
  },
  {
    "input": "You need to authenticate with Docker using Mary Doe's username (marydoe) and her password (herpassword).",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe --password=herpassword\""
  },
  {
    "input": "Retrieve the images alongside their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Retrieve the images and IDs of all the containers currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Please provide the login details for Mary Doe - username: marydoe, password: herpassword.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe --password=herpassword\""
  },
  {
    "input": "Give me the images without truncating their information.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "Terminate the instance of confusioner.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill confusioner\""
  },
  {
    "input": "Docker, could you show me all the Docker images, whether they are dangling or not? Additionally, display their repository, tags, and IDs.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Provide me with the containers that were launched after 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "Provide the details of the recently executed container.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Retrieve the full information of all active containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "It's time to authenticate, Docker. Log in with your username and password, please.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password=mypassword\""
  },
  {
    "input": "Give me the containers that are running and are in a healthy condition.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "Display the repositories and tags of your images, if possible.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Give me the list of running containers with a creation time before 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "Provide me with a list of images that were created before \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "Show me the Docker image IDs. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Bring up the list of containers that have exited before 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Show me a list of all the images along with their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display the running containers that are in a healthy state.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "Find all the containers that have the volume as \"/data\" and are based on the \"postgres\" image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "Show me the list of containers that have exposed port 80. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'expose=80'"
  },
  {
    "input": "Provide me with information about the nginx images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "Display the containers that have the name \"my-container\". ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "Please give me the list of all the images along with their respective repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "List all containers that were running before 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "I require the details of the previously executed container.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Give me the repository, tag, and digest for the images in the system.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Show me the running containers that have port 9090 published.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=9090' --filter 'status=running'"
  },
  {
    "input": "Kindly stop my_container1 and my_container2 by sending them a SIGINT signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGINT my_container1 my_container2\""
  },
  {
    "input": "Can you provide me with the repositories and tags used for your images?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Give me the container IDs of all containers, irrespective of their current state. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Display the last 4 containers that were active. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "Fetch me the images and present them in a table format with the repository, tag, ID, and size.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "I need a list of just the Docker image IDs. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Could you display the containers that have exited without any errors?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'exited=0'"
  },
  {
    "input": "Fetch all the images with their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "I want to see the containers that have exited without errors.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'exited=0'"
  },
  {
    "input": "Please display all Docker images, even the ones that are not active currently.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --all"
  },
  {
    "input": "List all containers that have published port 8080 and are currently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Can you provide me the list of containers having /app as volume and mongo as ancestor?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "Show me the repositories, tags, and IDs of the dangling images.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display the running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Fetch the details of any containers started after 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "Display the containers that have the status as running and the network as my-network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Retrieve a list of all Docker images. I also need the dangling ones to be included. Please provide their repository, tags, and IDs.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Retrieve the running Docker containers that were created after 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Give me a list of images that are not being used.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "List only the containers that are currently active with volumes mounted at \"/data\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "List all containers that have port 8080 published and are currently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Display the names and statuses of all running containers, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "\"Hey, Docker! It's time to log in. The username is johndoe.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe\""
  },
  {
    "input": "List all the images with their corresponding repository, tag, ID, and size in a table format.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "Give me the running tasks in Docker, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Show me the containers that have port 8080 published and are currently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Can you give me the IDs of the running containers? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Retrieve the images since the nginx:alpine image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f since=nginx:alpine"
  },
  {
    "input": "Show the Docker images that were created before the image \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "Retrieve the nginx images and their respective repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Give me an update on the status and sizes of the containers currently running.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Display the repository, tag, and ID of the images that were created before the latest nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f \"before=nginx:latest\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Hey Docker, log in to my registry at myregistry.example.com using the username \"johndoe\" and the password \"mypassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Provide me with the digests for all the images in Docker. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "I want to see a list of containers that are currently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "Login using the credentials stored in the password file to access the system.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Give me a list of containers that are currently running on my-network network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Give me a list of running containers that expose port 80.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "I want an overview of all Docker images, including the ones that are not currently active.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --all"
  },
  {
    "input": "List all the running and stopped containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Stop ginto  after 10 seconds with grace.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 10 ginto\""
  },
  {
    "input": "Display the stopped containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Retrieve a list of containers that have exited with a status code of 1.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Please show me the containers that are running and exposing port 443.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=443'"
  },
  {
    "input": "List all containers filtered by the Ubuntu ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Stop all containers with the image \"my_image\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill $(docker ps -q --filter ancestor=my_image)\""
  },
  {
    "input": "Retrieve the images and format them as a table with the repository, tag, ID, and size.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "Retrieve the names, images, and status of the containers for me.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Find all containers where the volume is \"/data\" and the ancestor is \"postgres\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "Cease the operation of any containers that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q --filter status=running)\""
  },
  {
    "input": "Show the Docker images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "List all the containers, even the inactive ones. Display the details of the first three.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "List all containers, showing their names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Show me the images along with their complete information.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "Please log in to anotherregistry.example.com using your username \"johndoe\" and password \"mypassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "List the containers in the frontend network with their running statuses.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Please authenticate yourself with myregistry.example.com using the provided username and password in ~/mypassword.txt.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Fetch the details of the three latest containers, whether active or inactive.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "Hey, Docker friend, could you display the running containers with the 'network=host' filter applied?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "List any containers that have been started after 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "Can you fetch the nginx image from the source?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "Give me the running containers' IDs and images, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Shut down reverseProxyGinto promptly.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill reverseProxyGinto\""
  },
  {
    "input": "Docker, it's time to log in. Use your username and password for authentication purposes.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password=mypassword\""
  },
  {
    "input": "Please show the containers that have exited successfully.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'exited=0'"
  },
  {
    "input": "List all running containers with their names and images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'"
  },
  {
    "input": "Retrieve the details of all the images including their respective repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please give me the names, images, and status of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Please terminate all my_image containers.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q --filter status=running --filter ancestor=my_image)\""
  },
  {
    "input": "Show all the containers currently running and having the ancestor Ubuntu. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "I need to see all the containers currently running with the ACME label.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'label=com.example.vendor=ACME' --filter 'status=running'"
  },
  {
    "input": "Get me the containers currently running and having volumes attached to \"/data\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Don't keep me waiting, display the recent container information.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Hi Docker, I need to log in as \"marydoe\" to proceed. Can you please assist me with that?",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe\""
  },
  {
    "input": "Provide me with the names and images of all containers that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'"
  },
  {
    "input": "Give me a list of running containers with the Ubuntu image. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "I would like to see a list of all Docker images, including the dangling ones, along with their repository, tags, and IDs.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Mary Doe, please enter your username (marydoe) and password (herpassword) to login.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe --password=herpassword\""
  },
  {
    "input": "Display the running containers created since 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Return a list of running containers that have port 8080 published and are currently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "List the status and sizes of all the containers that are currently running.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Give me a list of containers currently active with volumes linked to \"/data\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Could you please give me a list of all the Docker images, even the dangling ones? Additionally, include their repository, tags, and IDs.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Retrieve all containers that have the volume set to \"/data\" and are based on the \"postgres\" image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "Show me the list of the last five containers currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -n 5"
  },
  {
    "input": "Docker, please perform a login to myregistry.example.com using the credentials \"johndoe\" as the username and \"mypassword\" as the password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Show me the IDs and images of all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Give me the details of containers that have exited with a successful status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Retrieve a list of all Docker images, including the dangling ones, and provide their repository, tags, and IDs.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Let me know about the container you ran last straight away.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "List all running containers with unhealthy health status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=unhealthy'"
  },
  {
    "input": "Please show me the repositories and tags of your images when you get a chance.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Retrieve the list of running containers that are derived from Debian, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "I'm interested in seeing the names and statuses of all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "I want to see only the IDs of the running containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Hey Docker, I need you to log in to myregistry.example.com. The username is \"johndoe\" and the password is stored in ~/mypassword.txt.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Retrieve containers that have the volume set to \"/data\" and are based on the \"postgres\" image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "Please present the details of the last executed container.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -l"
  },
  {
    "input": "Find all the running containers and provide their names and statuses.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "I would appreciate it if you could show me the repositories and tags of your images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Please return the details of the three latest containers, including the inactive ones.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "Show containers that are running and expose port 80.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "Display the names and images of all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'"
  },
  {
    "input": "Retrieve the information of the 4 most recent containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "Give me the names of the images that are dangling.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"dangling=true\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "List the IDs of all the running containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Docker, show me all the Docker images, including the ones that are dangling, and provide their repository, tags, and IDs.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display the running Docker containers that started from 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Hey Docker, display the running containers, but don't forget to filter them by 'network=host'.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Is it possible to provide me with the names and statuses of the running containers?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Retrieve the list of running containers that have Debian as their ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "I kindly request you to stop all running my_image containers.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q --filter status=running --filter ancestor=my_image)\""
  },
  {
    "input": "List the containers with the name \"my-container\". ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "Find all the containers having the ancestor set as mongo and volume set to /app.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "Give me the containers that exited before the container 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Find the containers that have exited before the container with ID 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Show the images and their corresponding repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Give me the details of all the images with their respective repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Docker, fetch the running containers derived from Debian.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "Display all the images stored in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "List all the containers with the status set as \"exited\" and the image ancestor set as Alpine.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Show me the status of all containers, whether they are running or stopped. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Show me the images with dangling status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f dangling=true"
  },
  {
    "input": "Let me see the list of tasks running in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Help me find the names and statuses of all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Get me all the available images stored in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Find all the containers having the ancestor set to mongo and volume set to /app.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "Could you please let me know the nginx images that are present?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "Give me all the Docker images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Give me a list of all the Docker images and their associated digests. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Hi Docker! Can you please log in to yetanotherregistry.example.net using the username \"marydoe\" and the password \"herpassword\"?",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login yetanotherregistry.example.net --username=marydoe --password=herpassword\""
  },
  {
    "input": "Johndoe, please login to the Docker to proceed.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe\""
  },
  {
    "input": "Display the active containers that have port 8080 published. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'publish=8080'"
  },
  {
    "input": "Show me the list of running containers with a healthy health status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "Docker, I want you to gracefully terminate my_container1 and my_container2 using the SIGINT signal.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGINT my_container1 my_container2\""
  },
  {
    "input": "Show the containers that are running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Display a list of all Docker images, and make sure to include the dangling ones. Provide their repository, tags, and IDs as well.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Display containers that are running with the Ubuntu ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Show me the images along with their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -q --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "\"Could you log me in to myregistry.example.com? Use 'johndoe' as the username.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe\""
  },
  {
    "input": "Find all the images that have the label \"maintainer=nginx\" and show their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me all the containers that exited before having the ID 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'before=4f66ad9a0b2e' --filter 'status=exited'"
  },
  {
    "input": "Please provide me with the details of all the images including their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Could you show me the running containers, please? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "Show me the containers with the volume set to \"/data\" and the ancestor set as \"postgres\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "Give me a list of containers in a healthy state.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'health=healthy'"
  },
  {
    "input": "Retrieve the images information with the repository, tag, ID, and size represented in a table.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "Display the containers that are running and listening on port 8080. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "List all the containers, including the inactive ones. Show the details for the first three.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "Give me the images that were created before \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "List all the images without cutting off any information.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "I would like to see the running containers and their sizes.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "List the containers that are running and exposed on port 8080. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'publish=8080'"
  },
  {
    "input": "Retrieve a list of all containers with their respective names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Display all containers, including their status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Please log in to anotherregistry.example.com with the username \"johndoe\" and password \"mypassword\" for authentication.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login anotherregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "Give me the details of all the images with their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me the complete list of images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "Show containers that are running and have the Ubuntu ancestor.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Please provide me with a breakdown of the containers that are currently running and their sizes.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "List down all the containers that are currently running and have the network as my-network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "Docker, list the running containers, but make sure to only include those that have the 'network=host' filter.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "I'm interested in knowing the names and images of all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'"
  },
  {
    "input": "List the containers that have been created since 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "Find and display all the containers named \"my-container\". ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'name=my-container'"
  },
  {
    "input": "Can you get me the list of nginx images?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "Provide a list of containers that were launched since 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "List down all the running Docker containers filtered by creation since 4f66ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=4f66ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Show me the running containers with a healthy status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "List all the tasks that are currently running in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Let me know about the containers that exited successfully and have a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Display the containers that are running and expose port 80.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "Give me a detailed summary of all the running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Provide me with a list of running containers that are running on port 8080. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Show me the full details of all the images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "Display the containers that are not running and have the parent image set as Alpine.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "I need to know the IDs of Docker images. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Get me the list of containers with volumes mounted at \"/data\" and are currently active.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Docker, could you please cease all the running containers within 5 seconds with proper care?",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 5 $(docker ps -q --filter status=running)\""
  },
  {
    "input": "Show me the container IDs for the running containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "Show me the containers with a status of running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "List all running containers created before 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "Please display all the containers with the volume set as \"/data\" and the image set as \"postgres\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/data' --filter 'ancestor=postgres'"
  },
  {
    "input": "Display the information of the last 4 containers. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "I want to see the containers that have port 8080 published and are running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'publish=8080'"
  },
  {
    "input": "Fetch the details of the images such as repository, tag, and digest.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "List all Docker images, including those that are not being used currently.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --all"
  },
  {
    "input": "Return a list of running containers that are currently listening on port 8080. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Give me a list of containers in the frontend network filtered by running status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Fetch all the images and format them in a table with the repository, tag, ID, and size.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"table {{.Repository}},{{.Tag}},{{.ID}},{{.Size}}\""
  },
  {
    "input": "Fetch the containers that have volumes mounted at \"/data\" and are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "List the running containers and filter them by volumes mounted at \"/data\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Retrieve the list of all Docker images, even the dangling ones, and include their repository, tags, and IDs.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "List all the images along with their digests. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Display the images' repository, tag, and digest information.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Give me a list of containers that are running and have port 80 exposed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "Show me the containers which are currently running and healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "Display the containers that have been created before 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "Provide me with the details of the three latest containers, regardless of their status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "Can you provide me with the IDs of running containers? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -q"
  },
  {
    "input": "I need to see the digests for all the Docker images. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Please login using Mary Doe's username and her password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe --password=herpassword\""
  },
  {
    "input": "Show me the containers running with a creation time before 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "Please show me the repositories and tags of your images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}}\""
  },
  {
    "input": "Retrieve a list of all containers, with their names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Please provide me with a list of containers that are currently running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running'"
  },
  {
    "input": "\"Docker, the next step requires you to log in to the new registry. Your username, Mary Doe, will grant you access.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login newregistry.example.org --username=marydoe\""
  },
  {
    "input": "Check the status of all containers, regardless of their state.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Docker, show me the running containers and filter them with the 'network=host' criteria.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Provide me with a list of images that were built before the image \"nginx:latest\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f before=nginx:latest"
  },
  {
    "input": "Could you fetch the Docker image IDs for me? ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --quiet"
  },
  {
    "input": "Kindly display the names and statuses of all running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Status}}'"
  },
  {
    "input": "Docker, list all the containers with exited status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Provide me the complete details of currently active containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "Can you show me the repository, tag, and ID of the mongo images?",
    "instruction": "translate this sentence in docker command",
    "output": "docker images mongo --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Kindly halt the container named \"my_container\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop my_container\""
  },
  {
    "input": "I want to see the containers that have exited successfully.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'exited=0'"
  },
  {
    "input": "Display containers that exited successfully with a status of 0.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=0'"
  },
  {
    "input": "Retrieve a list of all containers and their names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Docker, fetch the running containers whose base image is Debian.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=debian'"
  },
  {
    "input": "Provide me with the complete details of the images in the list.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "\"Docker, please login immediately. Use the username johndoe.\"",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe\""
  },
  {
    "input": "Kindly enter your login details saved in the specified file for authentication purposes.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Give me the information about the active containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Show me the information of the last three containers, whether active or inactive.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "Show me the digests of all the Docker images. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Please stop my container.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop -t 0 my_container\""
  },
  {
    "input": "Give me the running containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps"
  },
  {
    "input": "Give me the images and their corresponding repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "I want to see the containers that have port 8080 published and are running. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'publish=8080'"
  },
  {
    "input": "I want to see the names and images of all containers that are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --format '{{.Names}}\\t{{.Image}}'"
  },
  {
    "input": "Give me the repository, tag, and digest for each image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Sort the images by the label \"maintainer=nginx\" and display their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "I need a list of running containers that were created after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "List the names of containers running before 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'before=3e33ad9a0b2e'"
  },
  {
    "input": "Fetch me the available Docker images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Give me a list of containers that are currently running on port 8080 and have port 8080 published. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Display all the images without truncating any information.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "Hey there, please authenticate yourself by logging in with your username and password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password=mypassword\""
  },
  {
    "input": "Get me the list of all containers running the Ubuntu image. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "Please terminate all Docker containers right now.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill -s SIGTERM $(docker ps -q)\""
  },
  {
    "input": "Display all the containers with the ancestor set to mongo and volume set to /app.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "Fetch the nginx images along with their relevant details, like the repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "List the containers in the frontend network and their respective statuses.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=frontend-network' --filter 'status=running'"
  },
  {
    "input": "Can you show me the containers that have exited with a code of 0?",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'exited=0'"
  },
  {
    "input": "List all the containers, even the inactive ones. Show details for the first three.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "Give me a list of all running containers that are running on port 8080. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'publish=8080' --filter 'status=running'"
  },
  {
    "input": "Display the Docker containers that have an exited status and are derived from the nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=nginx'"
  },
  {
    "input": "Remove the container with the ID \"abcd1234\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe --password-stdin \u003c ~/herpassword.txt\""
  },
  {
    "input": "List all the running containers with their corresponding images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Show me all the nginx images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me the containers that are in exited status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "List the Docker containers that have exited and are based on the nginx image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=nginx'"
  },
  {
    "input": "Docker, I'm curious to see the running containers, but only those that are using the 'network=host' filter.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Show me the running tasks in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Display the images' repository, tag, and digest information on the server.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests --format \"{{.Repository}},{{.Tag}},{{.Digest}}\""
  },
  {
    "input": "Fetch a list of containers that have exited with a status code of 1.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Display all containers, along with their names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Show me all the active containers with volumes connected to \"/data\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Give me a list of containers that are running and marked as healthy.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'health=healthy'"
  },
  {
    "input": "Stop reverseProxyGinto without delay.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker kill reverseProxyGinto\""
  },
  {
    "input": "Display the IDs and images of the containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --format '{{.ID}}: {{.Image}}'"
  },
  {
    "input": "Show me all the containers that are running and expose port 80.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "Show me the repository, tag, and ID of images that are maintained by nginx.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --filter \"label=maintainer=nginx\" --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Fetch the list of images and display their repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Show me the containers that are currently running and have the Ubuntu image. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'status=running' --filter 'ancestor=ubuntu'"
  },
  {
    "input": "List all the running containers that were created after the 3e33ad9a0b2e commit.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Show me the containers, including their names, images, and status.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --format '{{.Names}}\\t{{.Image}}\\t{{.Status}}'"
  },
  {
    "input": "Display the list of all the images along with their respective repository, tag, and ID.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Fetch me the containers that have the status running on the my-network network.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'network=my-network' --filter 'status=running'"
  },
  {
    "input": "List the containers that have stopped running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'exited=1'"
  },
  {
    "input": "Hey there, show me the running containers, but don't forget to apply the 'network=host' filter.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'network=host'"
  },
  {
    "input": "Fetch all the Docker images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "List all the containers currently running along with their sizes.  ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -s"
  },
  {
    "input": "Login to your account by entering the username and password saved in the text file.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=johndoe --password-stdin \u003c ~/mypassword.txt\""
  },
  {
    "input": "Could you login to the new registry? Use your username and password.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login newregistry.example.org --username=marydoe --password=herpassword\""
  },
  {
    "input": "Give me a list of containers that are currently running with volumes linked to \"/data\".",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "Display the containers that are not running and have the ancestor set as Alpine.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Tell me the information of the three most recent containers.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -n 3"
  },
  {
    "input": "Please display all the Docker images, including the dangling ones, and provide their repository, tags, and IDs.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -a --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Please list all the containers having the ancestor set to mongo and volumes set to /app.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "List the containers that are currently running and have port 80 exposed.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=running' --filter 'expose=80'"
  },
  {
    "input": "Please list all the containers in exited status, Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited'"
  },
  {
    "input": "Provide me with the digests of all the images available.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --digests"
  },
  {
    "input": "Show me the last 4 containers of this Docker. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --last 4"
  },
  {
    "input": "Get me the list of images in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "List all the images available in Docker.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images"
  },
  {
    "input": "Display the tasks that are running in Docker, please.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'is-task=true'"
  },
  {
    "input": "Hey Docker, could you halt the containers associated with my image?",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q --filter ancestor=my_image)\""
  },
  {
    "input": "Please list all the containers with the volumes set to /app and the ancestor as mongo.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "Show the running containers after 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'since=3e33ad9a0b2e'"
  },
  {
    "input": "I need to see all the containers, including the stopped ones. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a"
  },
  {
    "input": "Docker, it's time to log in to myregistry.example.com. Your username is \"johndoe\" and your password is \"mypassword\".",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login myregistry.example.com --username=johndoe --password=mypassword\""
  },
  {
    "input": "I want to see a list of all containers, regardless of their status. ",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a -q"
  },
  {
    "input": "Gather the repository, tag, and ID of all the nginx images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx --format \"{{.Repository}},{{.Tag}},{{.ID}}\""
  },
  {
    "input": "Login with the credentials of Mary Doe (username: marydoe, password: herpassword).",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker login --username=marydoe --password=herpassword\""
  },
  {
    "input": "Include all the information while presenting the images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images --no-trunc"
  },
  {
    "input": "Display the images that have been built since the nginx:alpine image.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images -f since=nginx:alpine"
  },
  {
    "input": "Show me all the active containers with their complete details.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --no-trunc"
  },
  {
    "input": "List all the containers with the status set as \"exited\" and the parent image set as Alpine.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'status=exited' --filter 'ancestor=alpine'"
  },
  {
    "input": "Find all the containers with the ancestor as mongo and volumes set to /app.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'volume=/app' --filter 'ancestor=mongo'"
  },
  {
    "input": "Give me the containers that have volumes connected to \"/data\" and are currently running.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps --filter 'volume=/data'"
  },
  {
    "input": "I want to see the available nginx images.",
    "instruction": "translate this sentence in docker command",
    "output": "docker images nginx"
  },
  {
    "input": "List the running containers which were created after the commit 3e33ad9a0b2e.",
    "instruction": "translate this sentence in docker command",
    "output": "docker ps -a --filter 'since=3e33ad9a0b2e' --filter 'status=running'"
  },
  {
    "input": "Docker, stop the execution of all existing containers at once.",
    "instruction": "translate this sentence in docker command",
    "output": "\"docker stop $(docker ps -q)\""
  }
]